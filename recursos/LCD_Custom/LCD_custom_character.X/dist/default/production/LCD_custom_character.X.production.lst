

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Jul 29 17:20:38 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           	psect	idataCOMRAM
    22  0009D8                     __pidataCOMRAM:
    23                           	opt stack 0
    24                           
    25                           ;initializer for _character1
    26  0009D8  00                 	db	0
    27  0009D9  1F                 	db	31
    28  0009DA  0A                 	db	10
    29  0009DB  0A                 	db	10
    30  0009DC  0A                 	db	10
    31  0009DD  0A                 	db	10
    32  0009DE  09                 	db	9
    33  0009DF  00                 	db	0
    34                           
    35                           ;initializer for _character2
    36  0009E0  11                 	db	17
    37  0009E1  19                 	db	25
    38  0009E2  1D                 	db	29
    39  0009E3  1F                 	db	31
    40  0009E4  1D                 	db	29
    41  0009E5  19                 	db	25
    42  0009E6  11                 	db	17
    43  0009E7  00                 	db	0
    44                           
    45                           ;initializer for _character3
    46  0009E8  12                 	db	18
    47  0009E9  14                 	db	20
    48  0009EA  18                 	db	24
    49  0009EB  10                 	db	16
    50  0009EC  18                 	db	24
    51  0009ED  15                 	db	21
    52  0009EE  13                 	db	19
    53  0009EF  17                 	db	23
    54                           
    55                           ;initializer for _character4
    56  0009F0  0A                 	db	10
    57  0009F1  0A                 	db	10
    58  0009F2  0A                 	db	10
    59  0009F3  1B                 	db	27
    60  0009F4  0A                 	db	10
    61  0009F5  0A                 	db	10
    62  0009F6  0A                 	db	10
    63  0009F7  00                 	db	0
    64                           
    65                           ;initializer for _character5
    66  0009F8  00                 	db	0
    67  0009F9  0E                 	db	14
    68  0009FA  11                 	db	17
    69  0009FB  11                 	db	17
    70  0009FC  11                 	db	17
    71  0009FD  0A                 	db	10
    72  0009FE  1B                 	db	27
    73  0009FF  00                 	db	0
    74  0000                     _LATB	set	3978
    75  0000                     _OSCCON	set	4051
    76  0000                     _TRISB	set	3987
    77  0000                     _TRISD	set	3989
    78  0000                     _LATD0	set	31840
    79  0000                     _LATD1	set	31841
    80                           
    81                           	psect	smallconst
    82  000800                     __psmallconst:
    83                           	opt stack 0
    84  000800  00                 	db	0
    85  000801                     STR_1:
    86  000801  50                 	db	80	;'P'
    87  000802  69                 	db	105	;'i'
    88  000803  20                 	db	32
    89  000804  44                 	db	68	;'D'
    90  000805  20                 	db	32
    91  000806  20                 	db	32
    92  000807  54                 	db	84	;'T'
    93  000808  20                 	db	32
    94  000809  20                 	db	32
    95  00080A  43                 	db	67	;'C'
    96  00080B  20                 	db	32
    97  00080C  20                 	db	32
    98  00080D  6F                 	db	111	;'o'
    99  00080E  68                 	db	104	;'h'
   100  00080F  6D                 	db	109	;'m'
   101  000810  00                 	db	0
   102                           
   103                           ; #config settings
   104  000811  00                 	db	0	; dummy byte at the end
   105  0000                     
   106                           	psect	cinit
   107  000950                     __pcinit:
   108                           	opt stack 0
   109  000950                     start_initialization:
   110                           	opt stack 0
   111  000950                     __initialization:
   112                           	opt stack 0
   113                           
   114                           ; Initialize objects allocated to COMRAM (40 bytes)
   115                           ; load TBLPTR registers with __pidataCOMRAM
   116  000950  0ED8               	movlw	low __pidataCOMRAM
   117  000952  6EF6               	movwf	tblptrl,c
   118  000954  0E09               	movlw	high __pidataCOMRAM
   119  000956  6EF7               	movwf	tblptrh,c
   120  000958  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   121  00095A  6EF8               	movwf	tblptru,c
   122  00095C  EE00  F001         	lfsr	0,__pdataCOMRAM
   123  000960  EE10 F028          	lfsr	1,40
   124  000964                     copy_data0:
   125  000964  0009               	tblrd		*+
   126  000966  CFF5 FFEE          	movff	tablat,postinc0
   127  00096A  50E5               	movf	postdec1,w,c
   128  00096C  50E1               	movf	fsr1l,w,c
   129  00096E  E1FA               	bnz	copy_data0
   130  000970                     end_of_initialization:
   131                           	opt stack 0
   132  000970                     __end_of__initialization:
   133                           	opt stack 0
   134  000970  0E00               	movlw	low (__Lsmallconst shr (0+16))
   135  000972  6EF8               	movwf	tblptru,c
   136  000974  0E08               	movlw	high __Lsmallconst
   137  000976  6EF7               	movwf	tblptrh,c
   138  000978  0100               	movlb	0
   139  00097A  EF09  F004         	goto	_main	;jump to C main() function
   140                           tblptru	equ	0xFF8
   141                           tblptrh	equ	0xFF7
   142                           tblptrl	equ	0xFF6
   143                           tablat	equ	0xFF5
   144                           postinc0	equ	0xFEE
   145                           postdec1	equ	0xFE5
   146                           fsr1l	equ	0xFE1
   147                           
   148                           	psect	dataCOMRAM
   149  000001                     __pdataCOMRAM:
   150                           	opt stack 0
   151  000001                     _character1:
   152                           	opt stack 0
   153  000001                     	ds	8
   154  000009                     _character2:
   155                           	opt stack 0
   156  000009                     	ds	8
   157  000011                     _character3:
   158                           	opt stack 0
   159  000011                     	ds	8
   160  000019                     _character4:
   161                           	opt stack 0
   162  000019                     	ds	8
   163  000021                     _character5:
   164                           	opt stack 0
   165  000021                     	ds	8
   166                           tblptru	equ	0xFF8
   167                           tblptrh	equ	0xFF7
   168                           tblptrl	equ	0xFF6
   169                           tablat	equ	0xFF5
   170                           postinc0	equ	0xFEE
   171                           postdec1	equ	0xFE5
   172                           fsr1l	equ	0xFE1
   173                           
   174                           	psect	cstackCOMRAM
   175  000029                     __pcstackCOMRAM:
   176                           	opt stack 0
   177  000029                     MSdelay@val:
   178                           	opt stack 0
   179                           
   180                           ; 2 bytes @ 0x0
   181  000029                     	ds	2
   182  00002B                     MSdelay@i:
   183                           	opt stack 0
   184                           
   185                           ; 2 bytes @ 0x2
   186  00002B                     	ds	2
   187  00002D                     MSdelay@j:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x4
   191  00002D                     	ds	2
   192  00002F                     LCD_Command@cmd:
   193                           	opt stack 0
   194  00002F                     LCD_Char@dat:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x6
   198  00002F                     	ds	1
   199  000030                     LCD_String@msg:
   200                           	opt stack 0
   201  000030                     LCD_Custom_Char@msg:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0x7
   205  000030                     	ds	2
   206  000032                     LCD_String_xy@pos:
   207                           	opt stack 0
   208  000032                     LCD_Custom_Char@loc:
   209                           	opt stack 0
   210                           
   211                           ; 1 bytes @ 0x9
   212  000032                     	ds	1
   213  000033                     LCD_Custom_Char@i:
   214                           	opt stack 0
   215  000033                     LCD_String_xy@msg:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0xA
   219  000033                     	ds	2
   220  000035                     LCD_String_xy@row:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0xC
   224  000035                     	ds	1
   225  000036                     LCD_String_xy@location:
   226                           	opt stack 0
   227                           
   228                           ; 1 bytes @ 0xD
   229  000036                     	ds	1
   230  000037                     main@i:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0xE
   234  000037                     	ds	1
   235                           tblptru	equ	0xFF8
   236                           tblptrh	equ	0xFF7
   237                           tblptrl	equ	0xFF6
   238                           tablat	equ	0xFF5
   239                           postinc0	equ	0xFEE
   240                           postdec1	equ	0xFE5
   241                           fsr1l	equ	0xFE1
   242                           
   243 ;;
   244 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   245 ;;
   246 ;; *************** function _main *****************
   247 ;; Defined at:
   248 ;;		line 32 in file "Custom charater.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;		None
   251 ;; Auto vars:     Size  Location     Type
   252 ;;  i               1   14[COMRAM] unsigned char 
   253 ;; Return value:  Size  Location     Type
   254 ;;		None               void
   255 ;; Registers used:
   256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   257 ;; Tracked objects:
   258 ;;		On entry : 0/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   262 ;;      Params:         0       0       0       0       0       0       0       0       0
   263 ;;      Locals:         1       0       0       0       0       0       0       0       0
   264 ;;      Temps:          0       0       0       0       0       0       0       0       0
   265 ;;      Totals:         1       0       0       0       0       0       0       0       0
   266 ;;Total ram usage:        1 bytes
   267 ;; Hardware stack levels required when called:    4
   268 ;; This function calls:
   269 ;;		_LCD_Char
   270 ;;		_LCD_Command
   271 ;;		_LCD_Custom_Char
   272 ;;		_LCD_Init
   273 ;;		_LCD_String_xy
   274 ;; This function is called by:
   275 ;;		Startup code after reset
   276 ;; This function uses a non-reentrant model
   277 ;;
   278                           
   279                           	psect	text0
   280  000812                     __ptext0:
   281                           	opt stack 0
   282  000812                     _main:
   283                           	opt stack 27
   284                           
   285                           ;Custom charater.c: 34: char i;
   286                           ;Custom charater.c: 35: OSCCON=0x72;
   287                           
   288                           ;incstack = 0
   289  000812  0E72               	movlw	114
   290  000814  6ED3               	movwf	4051,c	;volatile
   291                           
   292                           ;Custom charater.c: 36: LCD_Init();
   293  000816  ECBF  F004         	call	_LCD_Init	;wreg free
   294                           
   295                           ;Custom charater.c: 37: LCD_String_xy(1,0,"Pi D  T  C  ohm");
   296  00081A  0E00               	movlw	0
   297  00081C  6E32               	movwf	LCD_String_xy@pos,c
   298  00081E  0E01               	movlw	low STR_1
   299  000820  6E33               	movwf	LCD_String_xy@msg,c
   300  000822  0E08               	movlw	high STR_1
   301  000824  6E34               	movwf	LCD_String_xy@msg+1,c
   302  000826  0E01               	movlw	1
   303  000828  EC8B  F004         	call	_LCD_String_xy
   304                           
   305                           ;Custom charater.c: 38: LCD_Custom_Char(0,character1);
   306  00082C  0E01               	movlw	low _character1
   307  00082E  6E30               	movwf	LCD_Custom_Char@msg,c
   308  000830  0E00               	movlw	high _character1
   309  000832  6E31               	movwf	LCD_Custom_Char@msg+1,c
   310  000834  0E00               	movlw	0
   311  000836  EC4D  F004         	call	_LCD_Custom_Char
   312                           
   313                           ;Custom charater.c: 39: LCD_Custom_Char(1,character2);
   314  00083A  0E09               	movlw	low _character2
   315  00083C  6E30               	movwf	LCD_Custom_Char@msg,c
   316  00083E  0E00               	movlw	high _character2
   317  000840  6E31               	movwf	LCD_Custom_Char@msg+1,c
   318  000842  0E01               	movlw	1
   319  000844  EC4D  F004         	call	_LCD_Custom_Char
   320                           
   321                           ;Custom charater.c: 40: LCD_Custom_Char(2,character3);
   322  000848  0E11               	movlw	low _character3
   323  00084A  6E30               	movwf	LCD_Custom_Char@msg,c
   324  00084C  0E00               	movlw	high _character3
   325  00084E  6E31               	movwf	LCD_Custom_Char@msg+1,c
   326  000850  0E02               	movlw	2
   327  000852  EC4D  F004         	call	_LCD_Custom_Char
   328                           
   329                           ;Custom charater.c: 41: LCD_Custom_Char(3,character4);
   330  000856  0E19               	movlw	low _character4
   331  000858  6E30               	movwf	LCD_Custom_Char@msg,c
   332  00085A  0E00               	movlw	high _character4
   333  00085C  6E31               	movwf	LCD_Custom_Char@msg+1,c
   334  00085E  0E03               	movlw	3
   335  000860  EC4D  F004         	call	_LCD_Custom_Char
   336                           
   337                           ;Custom charater.c: 42: LCD_Custom_Char(4,character5);
   338  000864  0E21               	movlw	low _character5
   339  000866  6E30               	movwf	LCD_Custom_Char@msg,c
   340  000868  0E00               	movlw	high _character5
   341  00086A  6E31               	movwf	LCD_Custom_Char@msg+1,c
   342  00086C  0E04               	movlw	4
   343  00086E  EC4D  F004         	call	_LCD_Custom_Char
   344                           
   345                           ;Custom charater.c: 44: for(i=0;i<5;i++)
   346  000872  0E00               	movlw	0
   347  000874  6E37               	movwf	main@i,c
   348  000876                     l889:
   349  000876  0E04               	movlw	4
   350  000878  6437               	cpfsgt	main@i,c
   351  00087A  D001               	goto	l893
   352  00087C  D00B               	goto	l42
   353  00087E                     l893:
   354                           
   355                           ;Custom charater.c: 45: {
   356                           ;Custom charater.c: 46: LCD_Command(0xc0|(i*3));
   357  00087E  5037               	movf	main@i,w,c
   358  000880  0D03               	mullw	3
   359  000882  50F3               	movf	prodl,w,c
   360  000884  09C0               	iorlw	192
   361  000886  EC00  F005         	call	_LCD_Command
   362                           
   363                           ;Custom charater.c: 47: LCD_Char(i);
   364  00088A  5037               	movf	main@i,w,c
   365  00088C  EC0E  F005         	call	_LCD_Char
   366  000890  2A37               	incf	main@i,f,c
   367  000892  D7F1               	goto	l889
   368  000894                     l42:
   369  000894  D7FF               	goto	l42
   370  000896  EF00  F000         	goto	start
   371  00089A                     __end_of_main:
   372                           	opt stack 0
   373                           tblptru	equ	0xFF8
   374                           tblptrh	equ	0xFF7
   375                           tblptrl	equ	0xFF6
   376                           tablat	equ	0xFF5
   377                           prodl	equ	0xFF3
   378                           postinc0	equ	0xFEE
   379                           postdec1	equ	0xFE5
   380                           fsr1l	equ	0xFE1
   381                           
   382 ;; *************** function _LCD_String_xy *****************
   383 ;; Defined at:
   384 ;;		line 101 in file "Custom charater.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;  row             1    wreg     unsigned char 
   387 ;;  pos             1    9[COMRAM] unsigned char 
   388 ;;  msg             2   10[COMRAM] PTR const unsigned char 
   389 ;;		 -> STR_1(16), 
   390 ;; Auto vars:     Size  Location     Type
   391 ;;  row             1   12[COMRAM] unsigned char 
   392 ;;  location        1   13[COMRAM] unsigned char 
   393 ;; Return value:  Size  Location     Type
   394 ;;		None               void
   395 ;; Registers used:
   396 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   402 ;;      Params:         3       0       0       0       0       0       0       0       0
   403 ;;      Locals:         2       0       0       0       0       0       0       0       0
   404 ;;      Temps:          0       0       0       0       0       0       0       0       0
   405 ;;      Totals:         5       0       0       0       0       0       0       0       0
   406 ;;Total ram usage:        5 bytes
   407 ;; Hardware stack levels used:    1
   408 ;; Hardware stack levels required when called:    3
   409 ;; This function calls:
   410 ;;		_LCD_Command
   411 ;;		_LCD_String
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	text1
   418  000916                     __ptext1:
   419                           	opt stack 0
   420  000916                     _LCD_String_xy:
   421                           	opt stack 27
   422                           
   423                           ;incstack = 0
   424                           ;LCD_String_xy@row stored from wreg
   425  000916  6E35               	movwf	LCD_String_xy@row,c
   426                           
   427                           ;Custom charater.c: 103: char location=0;
   428  000918  0E00               	movlw	0
   429  00091A  6E36               	movwf	LCD_String_xy@location,c
   430                           
   431                           ;Custom charater.c: 104: if(row<=1)
   432  00091C  0E02               	movlw	2
   433  00091E  6035               	cpfslt	LCD_String_xy@row,c
   434  000920  D008               	goto	l849
   435                           
   436                           ;Custom charater.c: 105: {
   437                           ;Custom charater.c: 106: location=(0x80) | ((pos) & 0x0f);
   438  000922  5032               	movf	LCD_String_xy@pos,w,c
   439  000924  0B0F               	andlw	15
   440  000926  0980               	iorlw	128
   441  000928  6E36               	movwf	LCD_String_xy@location,c
   442                           
   443                           ;Custom charater.c: 107: LCD_Command(location);
   444  00092A  5036               	movf	LCD_String_xy@location,w,c
   445  00092C  EC00  F005         	call	_LCD_Command
   446                           
   447                           ;Custom charater.c: 108: }
   448  000930  D008               	goto	l853
   449  000932                     l849:
   450                           
   451                           ;Custom charater.c: 109: else
   452                           ;Custom charater.c: 110: {
   453                           ;Custom charater.c: 111: location=(0xC0) | ((pos) & 0x0f);
   454  000932  5032               	movf	LCD_String_xy@pos,w,c
   455  000934  0B0F               	andlw	15
   456  000936  09C0               	iorlw	192
   457  000938  6E36               	movwf	LCD_String_xy@location,c
   458                           
   459                           ;Custom charater.c: 112: LCD_Command(location);
   460  00093A  5036               	movf	LCD_String_xy@location,w,c
   461  00093C  EC00  F005         	call	_LCD_Command
   462  000940  D000               	goto	l853
   463  000942                     l853:
   464                           
   465                           ;Custom charater.c: 113: }
   466                           ;Custom charater.c: 116: LCD_String(msg);
   467  000942  C033  F030         	movff	LCD_String_xy@msg,LCD_String@msg
   468  000946  C034  F031         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
   469  00094A  ECD6  F004         	call	_LCD_String	;wreg free
   470  00094E  0012               	return		;funcret
   471  000950                     __end_of_LCD_String_xy:
   472                           	opt stack 0
   473                           tblptru	equ	0xFF8
   474                           tblptrh	equ	0xFF7
   475                           tblptrl	equ	0xFF6
   476                           tablat	equ	0xFF5
   477                           prodl	equ	0xFF3
   478                           postinc0	equ	0xFEE
   479                           postdec1	equ	0xFE5
   480                           fsr1l	equ	0xFE1
   481                           
   482 ;; *************** function _LCD_String *****************
   483 ;; Defined at:
   484 ;;		line 91 in file "Custom charater.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;  msg             2    7[COMRAM] PTR const unsigned char 
   487 ;;		 -> STR_1(16), 
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;		None               void
   492 ;; Registers used:
   493 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   499 ;;      Params:         2       0       0       0       0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0       0       0       0       0
   502 ;;      Totals:         2       0       0       0       0       0       0       0       0
   503 ;;Total ram usage:        2 bytes
   504 ;; Hardware stack levels used:    1
   505 ;; Hardware stack levels required when called:    2
   506 ;; This function calls:
   507 ;;		_LCD_Char
   508 ;; This function is called by:
   509 ;;		_LCD_String_xy
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text2
   514  0009AC                     __ptext2:
   515                           	opt stack 0
   516  0009AC                     _LCD_String:
   517                           	opt stack 27
   518                           
   519                           ;Custom charater.c: 93: while((*msg)!=0)
   520                           
   521                           ;incstack = 0
   522  0009AC  D00B               	goto	l833
   523  0009AE                     l829:
   524                           
   525                           ;Custom charater.c: 94: {
   526                           ;Custom charater.c: 95: LCD_Char(*msg);
   527  0009AE  C030  FFF6         	movff	LCD_String@msg,tblptrl
   528  0009B2  C031  FFF7         	movff	LCD_String@msg+1,tblptrh
   529  0009B6                     	if	0	;tblptru may be non-zero
   530  0009B6                     	endif
   531  0009B6                     	if	0	;tblptru may be non-zero
   532  0009B6                     	endif
   533  0009B6  0008               	tblrd		*
   534  0009B8  50F5               	movf	tablat,w,c
   535  0009BA  EC0E  F005         	call	_LCD_Char
   536                           
   537                           ;Custom charater.c: 96: msg++;
   538  0009BE  4A30               	infsnz	LCD_String@msg,f,c
   539  0009C0  2A31               	incf	LCD_String@msg+1,f,c
   540  0009C2  D000               	goto	l833
   541  0009C4                     l833:
   542  0009C4  C030  FFF6         	movff	LCD_String@msg,tblptrl
   543  0009C8  C031  FFF7         	movff	LCD_String@msg+1,tblptrh
   544  0009CC                     	if	0	;tblptru may be non-zero
   545  0009CC                     	endif
   546  0009CC                     	if	0	;tblptru may be non-zero
   547  0009CC                     	endif
   548  0009CC  0008               	tblrd		*
   549  0009CE  50F5               	movf	tablat,w,c
   550  0009D0  0900               	iorlw	0
   551  0009D2  A4D8               	btfss	status,2,c
   552  0009D4  D7EC               	goto	l829
   553  0009D6  0012               	return		;funcret
   554  0009D8                     __end_of_LCD_String:
   555                           	opt stack 0
   556                           tblptru	equ	0xFF8
   557                           tblptrh	equ	0xFF7
   558                           tblptrl	equ	0xFF6
   559                           tablat	equ	0xFF5
   560                           prodl	equ	0xFF3
   561                           postinc0	equ	0xFEE
   562                           postdec1	equ	0xFE5
   563                           fsr1l	equ	0xFE1
   564                           status	equ	0xFD8
   565                           
   566 ;; *************** function _LCD_Init *****************
   567 ;; Defined at:
   568 ;;		line 54 in file "Custom charater.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;		None
   573 ;; Return value:  Size  Location     Type
   574 ;;		None               void
   575 ;; Registers used:
   576 ;;		wreg, status,2, status,0, cstack
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   582 ;;      Params:         0       0       0       0       0       0       0       0       0
   583 ;;      Locals:         0       0       0       0       0       0       0       0       0
   584 ;;      Temps:          0       0       0       0       0       0       0       0       0
   585 ;;      Totals:         0       0       0       0       0       0       0       0       0
   586 ;;Total ram usage:        0 bytes
   587 ;; Hardware stack levels used:    1
   588 ;; Hardware stack levels required when called:    2
   589 ;; This function calls:
   590 ;;		_LCD_Command
   591 ;;		_MSdelay
   592 ;; This function is called by:
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text3
   598  00097E                     __ptext3:
   599                           	opt stack 0
   600  00097E                     _LCD_Init:
   601                           	opt stack 28
   602                           
   603                           ;Custom charater.c: 56: MSdelay(15);
   604                           
   605                           ;incstack = 0
   606  00097E  0E00               	movlw	0
   607  000980  6E2A               	movwf	MSdelay@val+1,c
   608  000982  0E0F               	movlw	15
   609  000984  6E29               	movwf	MSdelay@val,c
   610  000986  EC6C  F004         	call	_MSdelay	;wreg free
   611                           
   612                           ;Custom charater.c: 57: TRISB = 0x00;
   613  00098A  0E00               	movlw	0
   614  00098C  6E93               	movwf	3987,c	;volatile
   615                           
   616                           ;Custom charater.c: 58: TRISD = 0x00;
   617  00098E  0E00               	movlw	0
   618  000990  6E95               	movwf	3989,c	;volatile
   619                           
   620                           ;Custom charater.c: 59: LCD_Command(0x38);
   621  000992  0E38               	movlw	56
   622  000994  EC00  F005         	call	_LCD_Command
   623                           
   624                           ;Custom charater.c: 60: LCD_Command(0x0c);
   625  000998  0E0C               	movlw	12
   626  00099A  EC00  F005         	call	_LCD_Command
   627                           
   628                           ;Custom charater.c: 61: LCD_Command(0x06);
   629  00099E  0E06               	movlw	6
   630  0009A0  EC00  F005         	call	_LCD_Command
   631                           
   632                           ;Custom charater.c: 62: LCD_Command(0x01);
   633  0009A4  0E01               	movlw	1
   634  0009A6  EC00  F005         	call	_LCD_Command
   635  0009AA  0012               	return		;funcret
   636  0009AC                     __end_of_LCD_Init:
   637                           	opt stack 0
   638                           tblptru	equ	0xFF8
   639                           tblptrh	equ	0xFF7
   640                           tblptrl	equ	0xFF6
   641                           tablat	equ	0xFF5
   642                           prodl	equ	0xFF3
   643                           postinc0	equ	0xFEE
   644                           postdec1	equ	0xFE5
   645                           fsr1l	equ	0xFE1
   646                           status	equ	0xFD8
   647                           
   648 ;; *************** function _LCD_Custom_Char *****************
   649 ;; Defined at:
   650 ;;		line 121 in file "Custom charater.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;  loc             1    wreg     unsigned char 
   653 ;;  msg             2    7[COMRAM] PTR unsigned char 
   654 ;;		 -> character5(8), character4(8), character3(8), character2(8), 
   655 ;;		 -> character1(8), 
   656 ;; Auto vars:     Size  Location     Type
   657 ;;  loc             1    9[COMRAM] unsigned char 
   658 ;;  i               1   10[COMRAM] unsigned char 
   659 ;; Return value:  Size  Location     Type
   660 ;;		None               void
   661 ;; Registers used:
   662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   668 ;;      Params:         2       0       0       0       0       0       0       0       0
   669 ;;      Locals:         2       0       0       0       0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0       0       0       0       0
   671 ;;      Totals:         4       0       0       0       0       0       0       0       0
   672 ;;Total ram usage:        4 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; Hardware stack levels required when called:    2
   675 ;; This function calls:
   676 ;;		_LCD_Char
   677 ;;		_LCD_Command
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           	psect	text4
   684  00089A                     __ptext4:
   685                           	opt stack 0
   686  00089A                     _LCD_Custom_Char:
   687                           	opt stack 28
   688                           
   689                           ;incstack = 0
   690                           ;LCD_Custom_Char@loc stored from wreg
   691  00089A  6E32               	movwf	LCD_Custom_Char@loc,c
   692                           
   693                           ;Custom charater.c: 123: unsigned char i;
   694                           ;Custom charater.c: 124: if(loc<8)
   695  00089C  0E08               	movlw	8
   696  00089E  6032               	cpfslt	LCD_Custom_Char@loc,c
   697  0008A0  D01A               	goto	l73
   698                           
   699                           ;Custom charater.c: 125: {
   700                           ;Custom charater.c: 126: LCD_Command(0x40+(loc*8));
   701  0008A2  5032               	movf	LCD_Custom_Char@loc,w,c
   702  0008A4  0D08               	mullw	8
   703  0008A6  50F3               	movf	prodl,w,c
   704  0008A8  0F40               	addlw	64
   705  0008AA  EC00  F005         	call	_LCD_Command
   706                           
   707                           ;Custom charater.c: 127: for(i=0;i<8;i++)
   708  0008AE  0E00               	movlw	0
   709  0008B0  6E33               	movwf	LCD_Custom_Char@i,c
   710  0008B2                     l861:
   711  0008B2  0E07               	movlw	7
   712  0008B4  6433               	cpfsgt	LCD_Custom_Char@i,c
   713  0008B6  D001               	goto	l865
   714  0008B8  D00E               	goto	l73
   715  0008BA                     l865:
   716                           
   717                           ;Custom charater.c: 128: LCD_Char(msg[i]);
   718  0008BA  5033               	movf	LCD_Custom_Char@i,w,c
   719  0008BC  0D01               	mullw	1
   720  0008BE  50F3               	movf	prodl,w,c
   721  0008C0  2430               	addwf	LCD_Custom_Char@msg,w,c
   722  0008C2  6ED9               	movwf	fsr2l,c
   723  0008C4  50F4               	movf	prodh,w,c
   724  0008C6  2031               	addwfc	LCD_Custom_Char@msg+1,w,c
   725  0008C8  6EDA               	movwf	fsr2h,c
   726  0008CA  50DF               	movf	indf2,w,c
   727  0008CC  EC0E  F005         	call	_LCD_Char
   728  0008D0  2A33               	incf	LCD_Custom_Char@i,f,c
   729  0008D2  D7EF               	goto	l861
   730  0008D4  D000               	goto	l73
   731  0008D6                     l73:
   732  0008D6  0012               	return		;funcret
   733  0008D8                     __end_of_LCD_Custom_Char:
   734                           	opt stack 0
   735                           tblptru	equ	0xFF8
   736                           tblptrh	equ	0xFF7
   737                           tblptrl	equ	0xFF6
   738                           tablat	equ	0xFF5
   739                           prodh	equ	0xFF4
   740                           prodl	equ	0xFF3
   741                           postinc0	equ	0xFEE
   742                           postdec1	equ	0xFE5
   743                           fsr1l	equ	0xFE1
   744                           indf2	equ	0xFDF
   745                           fsr2h	equ	0xFDA
   746                           fsr2l	equ	0xFD9
   747                           status	equ	0xFD8
   748                           
   749 ;; *************** function _LCD_Command *****************
   750 ;; Defined at:
   751 ;;		line 70 in file "Custom charater.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;  cmd             1    wreg     unsigned char 
   754 ;; Auto vars:     Size  Location     Type
   755 ;;  cmd             1    6[COMRAM] unsigned char 
   756 ;; Return value:  Size  Location     Type
   757 ;;		None               void
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   765 ;;      Params:         0       0       0       0       0       0       0       0       0
   766 ;;      Locals:         1       0       0       0       0       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0       0       0       0       0
   768 ;;      Totals:         1       0       0       0       0       0       0       0       0
   769 ;;Total ram usage:        1 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    1
   772 ;; This function calls:
   773 ;;		_MSdelay
   774 ;; This function is called by:
   775 ;;		_main
   776 ;;		_LCD_Init
   777 ;;		_LCD_String_xy
   778 ;;		_LCD_Custom_Char
   779 ;;		_LCD_Clear
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text5
   784  000A00                     __ptext5:
   785                           	opt stack 0
   786  000A00                     _LCD_Command:
   787                           	opt stack 28
   788                           
   789                           ;incstack = 0
   790                           ;LCD_Command@cmd stored from wreg
   791  000A00  6E2F               	movwf	LCD_Command@cmd,c
   792                           
   793                           ;Custom charater.c: 72: LATB= cmd;
   794  000A02  C02F  FF8A         	movff	LCD_Command@cmd,3978	;volatile
   795                           
   796                           ;Custom charater.c: 73: LATD0 = 0;
   797  000A06  908C               	bcf	3980,0,c	;volatile
   798                           
   799                           ;Custom charater.c: 74: LATD1 = 1;
   800  000A08  828C               	bsf	3980,1,c	;volatile
   801                           
   802                           ;Custom charater.c: 75: __nop();
   803  000A0A  F000               	nop	
   804                           
   805                           ;Custom charater.c: 76: LATD1 = 0;
   806  000A0C  928C               	bcf	3980,1,c	;volatile
   807                           
   808                           ;Custom charater.c: 77: MSdelay(2);
   809  000A0E  0E00               	movlw	0
   810  000A10  6E2A               	movwf	MSdelay@val+1,c
   811  000A12  0E02               	movlw	2
   812  000A14  6E29               	movwf	MSdelay@val,c
   813  000A16  EC6C  F004         	call	_MSdelay	;wreg free
   814  000A1A  0012               	return		;funcret
   815  000A1C                     __end_of_LCD_Command:
   816                           	opt stack 0
   817                           tblptru	equ	0xFF8
   818                           tblptrh	equ	0xFF7
   819                           tblptrl	equ	0xFF6
   820                           tablat	equ	0xFF5
   821                           prodh	equ	0xFF4
   822                           prodl	equ	0xFF3
   823                           postinc0	equ	0xFEE
   824                           postdec1	equ	0xFE5
   825                           fsr1l	equ	0xFE1
   826                           indf2	equ	0xFDF
   827                           fsr2h	equ	0xFDA
   828                           fsr2l	equ	0xFD9
   829                           status	equ	0xFD8
   830                           
   831 ;; *************** function _LCD_Char *****************
   832 ;; Defined at:
   833 ;;		line 80 in file "Custom charater.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  dat             1    wreg     unsigned char 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;  dat             1    6[COMRAM] unsigned char 
   838 ;; Return value:  Size  Location     Type
   839 ;;		None               void
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   847 ;;      Params:         0       0       0       0       0       0       0       0       0
   848 ;;      Locals:         1       0       0       0       0       0       0       0       0
   849 ;;      Temps:          0       0       0       0       0       0       0       0       0
   850 ;;      Totals:         1       0       0       0       0       0       0       0       0
   851 ;;Total ram usage:        1 bytes
   852 ;; Hardware stack levels used:    1
   853 ;; Hardware stack levels required when called:    1
   854 ;; This function calls:
   855 ;;		_MSdelay
   856 ;; This function is called by:
   857 ;;		_main
   858 ;;		_LCD_String
   859 ;;		_LCD_Custom_Char
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text6
   864  000A1C                     __ptext6:
   865                           	opt stack 0
   866  000A1C                     _LCD_Char:
   867                           	opt stack 27
   868                           
   869                           ;incstack = 0
   870                           ;LCD_Char@dat stored from wreg
   871  000A1C  6E2F               	movwf	LCD_Char@dat,c
   872                           
   873                           ;Custom charater.c: 82: LATB= dat;
   874  000A1E  C02F  FF8A         	movff	LCD_Char@dat,3978	;volatile
   875                           
   876                           ;Custom charater.c: 83: LATD0 = 1;
   877  000A22  808C               	bsf	3980,0,c	;volatile
   878                           
   879                           ;Custom charater.c: 84: LATD1=1;
   880  000A24  828C               	bsf	3980,1,c	;volatile
   881                           
   882                           ;Custom charater.c: 85: __nop();
   883  000A26  F000               	nop	
   884                           
   885                           ;Custom charater.c: 86: LATD1=0;
   886  000A28  928C               	bcf	3980,1,c	;volatile
   887                           
   888                           ;Custom charater.c: 87: MSdelay(1);
   889  000A2A  0E00               	movlw	0
   890  000A2C  6E2A               	movwf	MSdelay@val+1,c
   891  000A2E  0E01               	movlw	1
   892  000A30  6E29               	movwf	MSdelay@val,c
   893  000A32  EC6C  F004         	call	_MSdelay	;wreg free
   894  000A36  0012               	return		;funcret
   895  000A38                     __end_of_LCD_Char:
   896                           	opt stack 0
   897                           tblptru	equ	0xFF8
   898                           tblptrh	equ	0xFF7
   899                           tblptrl	equ	0xFF6
   900                           tablat	equ	0xFF5
   901                           prodh	equ	0xFF4
   902                           prodl	equ	0xFF3
   903                           postinc0	equ	0xFEE
   904                           postdec1	equ	0xFE5
   905                           fsr1l	equ	0xFE1
   906                           indf2	equ	0xFDF
   907                           fsr2h	equ	0xFDA
   908                           fsr2l	equ	0xFD9
   909                           status	equ	0xFD8
   910                           
   911 ;; *************** function _MSdelay *****************
   912 ;; Defined at:
   913 ;;		line 133 in file "Custom charater.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;  val             2    0[COMRAM] unsigned int 
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  j               2    4[COMRAM] unsigned int 
   918 ;;  i               2    2[COMRAM] unsigned int 
   919 ;; Return value:  Size  Location     Type
   920 ;;		None               void
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   928 ;;      Params:         2       0       0       0       0       0       0       0       0
   929 ;;      Locals:         4       0       0       0       0       0       0       0       0
   930 ;;      Temps:          0       0       0       0       0       0       0       0       0
   931 ;;      Totals:         6       0       0       0       0       0       0       0       0
   932 ;;Total ram usage:        6 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_LCD_Init
   938 ;;		_LCD_Command
   939 ;;		_LCD_Char
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text7
   944  0008D8                     __ptext7:
   945                           	opt stack 0
   946  0008D8                     _MSdelay:
   947                           	opt stack 27
   948                           
   949                           ;Custom charater.c: 135: unsigned int i,j;
   950                           ;Custom charater.c: 136: for(i=0;i<=val;i++)
   951                           
   952                           ;incstack = 0
   953  0008D8  0E00               	movlw	0
   954  0008DA  6E2C               	movwf	MSdelay@i+1,c
   955  0008DC  0E00               	movlw	0
   956  0008DE  6E2B               	movwf	MSdelay@i,c
   957  0008E0  D013               	goto	l801
   958  0008E2                     l789:
   959                           
   960                           ;Custom charater.c: 137: for(j=0;j<81;j++);
   961  0008E2  0E00               	movlw	0
   962  0008E4  6E2E               	movwf	MSdelay@j+1,c
   963  0008E6  0E00               	movlw	0
   964  0008E8  6E2D               	movwf	MSdelay@j,c
   965  0008EA                     l791:
   966  0008EA  502E               	movf	MSdelay@j+1,w,c
   967  0008EC  E10A               	bnz	l799
   968  0008EE  0E51               	movlw	81
   969  0008F0  5C2D               	subwf	MSdelay@j,w,c
   970  0008F2  B0D8               	btfsc	status,0,c
   971  0008F4  D006               	goto	l799
   972  0008F6  D001               	goto	l795
   973  0008F8  D004               	goto	l799
   974  0008FA                     l795:
   975  0008FA  4A2D               	infsnz	MSdelay@j,f,c
   976  0008FC  2A2E               	incf	MSdelay@j+1,f,c
   977  0008FE  D7F5               	goto	l791
   978  000900  D000               	goto	l799
   979  000902                     l799:
   980  000902  4A2B               	infsnz	MSdelay@i,f,c
   981  000904  2A2C               	incf	MSdelay@i+1,f,c
   982  000906  D000               	goto	l801
   983  000908                     l801:
   984  000908  502B               	movf	MSdelay@i,w,c
   985  00090A  5C29               	subwf	MSdelay@val,w,c
   986  00090C  502C               	movf	MSdelay@i+1,w,c
   987  00090E  582A               	subwfb	MSdelay@val+1,w,c
   988  000910  B0D8               	btfsc	status,0,c
   989  000912  D7E7               	goto	l789
   990  000914  0012               	return		;funcret
   991  000916                     __end_of_MSdelay:
   992                           	opt stack 0
   993                           tblptru	equ	0xFF8
   994                           tblptrh	equ	0xFF7
   995                           tblptrl	equ	0xFF6
   996                           tablat	equ	0xFF5
   997                           prodh	equ	0xFF4
   998                           prodl	equ	0xFF3
   999                           postinc0	equ	0xFEE
  1000                           postdec1	equ	0xFE5
  1001                           fsr1l	equ	0xFE1
  1002                           indf2	equ	0xFDF
  1003                           fsr2h	equ	0xFDA
  1004                           fsr2l	equ	0xFD9
  1005                           status	equ	0xFD8
  1006                           tblptru	equ	0xFF8
  1007                           tblptrh	equ	0xFF7
  1008                           tblptrl	equ	0xFF6
  1009                           tablat	equ	0xFF5
  1010                           prodh	equ	0xFF4
  1011                           prodl	equ	0xFF3
  1012                           postinc0	equ	0xFEE
  1013                           postdec1	equ	0xFE5
  1014                           fsr1l	equ	0xFE1
  1015                           indf2	equ	0xFDF
  1016                           fsr2h	equ	0xFDA
  1017                           fsr2l	equ	0xFD9
  1018                           status	equ	0xFD8
  1019                           
  1020                           	psect	rparam
  1021  0000                     tblptru	equ	0xFF8
  1022                           tblptrh	equ	0xFF7
  1023                           tblptrl	equ	0xFF6
  1024                           tablat	equ	0xFF5
  1025                           prodh	equ	0xFF4
  1026                           prodl	equ	0xFF3
  1027                           postinc0	equ	0xFEE
  1028                           postdec1	equ	0xFE5
  1029                           fsr1l	equ	0xFE1
  1030                           indf2	equ	0xFDF
  1031                           fsr2h	equ	0xFDA
  1032                           fsr2l	equ	0xFD9
  1033                           status	equ	0xFD8


Data Sizes:
    Strings     16
    Constant    0
    Data        40
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      55
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> character5(COMRAM[8]), character4(COMRAM[8]), character3(COMRAM[8]), character2(COMRAM[8]), 
		 -> character1(COMRAM[8]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Command->_MSdelay
    _LCD_Char->_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2990
                                             14 COMRAM     1     1      0
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                           _LCD_Init
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3     885
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     371
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     524
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Custom_Char                                      4     2      2     945
                                              7 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     273
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     273
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2     251
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
     _MSdelay
   _LCD_Command
     _MSdelay
   _LCD_Custom_Char
     _LCD_Char
       _MSdelay
     _LCD_Command
       _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      F      37       1       57.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      20        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Jul 29 17:20:38 2016

            ?_LCD_Command 0029                        l42 0894                        l73 08D6  
             __CFG_BOR$ON 000000               __CFG_BORV$3 000000               ?_LCD_String 0030  
         _LCD_Custom_Char 089A              __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000  
            __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000                       l801 0908  
                     l833 09C4                       l861 08B2                       l829 09AE  
                     l853 0942                       l791 08EA                       l865 08BA  
                     l849 0932                       l795 08FA                       l789 08E2  
                     l893 087E                       l799 0902                       l889 0876  
            __CFG_CPB$OFF 000000              __CFG_CPD$OFF 000000              __CFG_LVP$OFF 000000  
             LCD_Char@dat 002F              __CFG_WDT$OFF 000000                      STR_1 0801  
                    _LATB 000F8A                      _main 0812                      fsr1l 000FE1  
                    indf2 000FDF                      fsr2l 000FD9                      prodh 000FF4  
                    prodl 000FF3                      start 0000           __end_of_MSdelay 0916  
           __CFG_IESO$OFF 000000             _LCD_String_xy 0916              ___param_bank 000010  
        __end_of_LCD_Char 0A38          __end_of_LCD_Init 09AC             __CFG_PLLDIV$1 000000  
          __CFG_CCP2MX$ON 000000                     ?_main 0029                     _LATD0 007C60  
                   _LATD1 007C61             __CFG_USBDIV$1 000000                     _TRISB 000F93  
                   _TRISD 000F95             __CFG_PWRT$OFF 000000             __CFG_WRT0$OFF 000000  
           __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000  
          __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000  
          __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000             __CFG_WRTB$OFF 000000  
           __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000  
                   main@i 0037                     tablat 000FF5                     status 000FD8  
     __size_of_LCD_String 002C            __CFG_ICPRT$OFF 000000            __CFG_PBADEN$ON 000000  
          ?_LCD_String_xy 0032            __CFG_MCLRE$OFF 000000   __end_of_LCD_Custom_Char 08D8  
         __initialization 0950              __end_of_main 089A                    ??_main 0037  
           __activetblptr 000001          LCD_String_xy@msg 0033          LCD_String_xy@pos 0032  
        LCD_String_xy@row 0035                 ??_MSdelay 002B                    _OSCCON 000FD3  
          __CFG_XINST$OFF 000000            __CFG_STVREN$ON 000000      __size_of_LCD_Command 001C  
        LCD_Custom_Char@i 0033              __pdataCOMRAM 0001              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
               ?_LCD_Char 0029                __accesstop 0060   __end_of__initialization 0970  
               ?_LCD_Init 0029           ??_LCD_String_xy 0035             ___rparam_used 000001  
        ?_LCD_Custom_Char 0030            __pcstackCOMRAM 0029              ??_LCD_String 0032  
              ??_LCD_Char 002F                _character1 0001                _character2 0009  
              _character3 0011                _character4 0019                _character5 0021  
              ??_LCD_Init 0030        __end_of_LCD_String 09D8                   _MSdelay 08D8  
         __CFG_VREGEN$OFF 000000             LCD_String@msg 0030                   __Hparam 0000  
                 __Lparam 0000              __psmallconst 0800                   __pcinit 0950  
                 __ramtop 0800                   __ptext0 0812                   __ptext1 0916  
                 __ptext2 09AC                   __ptext3 097E                   __ptext4 089A  
                 __ptext5 0A00                   __ptext6 0A1C                   __ptext7 08D8  
    end_of_initialization 0970            LCD_Command@cmd 002F                   postdec1 000FE5  
                 postinc0 000FEE         __size_of_LCD_Char 001C         __size_of_LCD_Init 002E  
           ??_LCD_Command 002F             __pidataCOMRAM 09D8       start_initialization 0950  
   __end_of_LCD_String_xy 0950          __CFG_LPT1OSC$OFF 000000  __size_of_LCD_Custom_Char 003E  
     __end_of_LCD_Command 0A1C                  ?_MSdelay 0029               __smallconst 0800  
   LCD_String_xy@location 0036                  MSdelay@i 002B                  MSdelay@j 002D  
                _LCD_Char 0A1C                  _LCD_Init 097E          __CFG_WDTPS$32768 000000  
             _LCD_Command 0A00         ??_LCD_Custom_Char 0032                 copy_data0 0964  
        __size_of_MSdelay 003E                  __Hrparam 0000                  __Lrparam 0000  
            __Lsmallconst 0800             __size_of_main 0088                MSdelay@val 0029  
              _LCD_String 09AC     __CFG_CPUDIV$OSC1_PLL2 000000        LCD_Custom_Char@loc 0032  
      LCD_Custom_Char@msg 0030       __CFG_FOSC$INTOSC_EC 000000    __size_of_LCD_String_xy 003A  
