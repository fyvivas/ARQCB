

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Jul 29 19:17:01 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           	psect	idataCOMRAM
    20  007CE6                     __pidataCOMRAM:
    21                           	opt stack 0
    22                           
    23                           ;initializer for _character1
    24  007CE6  00                 	db	0
    25  007CE7  00                 	db	0
    26  007CE8  0E                 	db	14
    27  007CE9  1F                 	db	31
    28  007CEA  1F                 	db	31
    29  007CEB  0E                 	db	14
    30  007CEC  00                 	db	0
    31  007CED  00                 	db	0
    32                           
    33                           ;initializer for _character2
    34  007CEE  0E                 	db	14
    35  007CEF  1F                 	db	31
    36  007CF0  1F                 	db	31
    37  007CF1  0E                 	db	14
    38  007CF2  00                 	db	0
    39  007CF3  00                 	db	0
    40  007CF4  00                 	db	0
    41  007CF5  00                 	db	0
    42                           
    43                           ;initializer for _character3
    44  007CF6  00                 	db	0
    45  007CF7  00                 	db	0
    46  007CF8  00                 	db	0
    47  007CF9  00                 	db	0
    48  007CFA  0E                 	db	14
    49  007CFB  1F                 	db	31
    50  007CFC  1F                 	db	31
    51  007CFD  0E                 	db	14
    52  0000                     _LATB	set	3978
    53  0000                     _OSCCON	set	4051
    54  0000                     _TRISB	set	3987
    55  0000                     _TRISD	set	3989
    56  0000                     _LATD0	set	31840
    57  0000                     _LATD1	set	31841
    58                           
    59                           ; #config settings
    60  0000                     
    61                           	psect	cinit
    62  007D36                     __pcinit:
    63                           	opt stack 0
    64  007D36                     start_initialization:
    65                           	opt stack 0
    66  007D36                     __initialization:
    67                           	opt stack 0
    68                           
    69                           ; Initialize objects allocated to COMRAM (24 bytes)
    70                           ; load TBLPTR registers with __pidataCOMRAM
    71  007D36  0EE6               	movlw	low __pidataCOMRAM
    72  007D38  6EF6               	movwf	tblptrl,c
    73  007D3A  0E7C               	movlw	high __pidataCOMRAM
    74  007D3C  6EF7               	movwf	tblptrh,c
    75  007D3E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    76  007D40  6EF8               	movwf	tblptru,c
    77  007D42  EE00  F001         	lfsr	0,__pdataCOMRAM
    78  007D46  EE10 F018          	lfsr	1,24
    79  007D4A                     copy_data0:
    80  007D4A  0009               	tblrd		*+
    81  007D4C  CFF5 FFEE          	movff	tablat,postinc0
    82  007D50  50E5               	movf	postdec1,w,c
    83  007D52  50E1               	movf	fsr1l,w,c
    84  007D54  E1FA               	bnz	copy_data0
    85  007D56                     end_of_initialization:
    86                           	opt stack 0
    87  007D56                     __end_of__initialization:
    88                           	opt stack 0
    89  007D56  0100               	movlb	0
    90  007D58  EF03  F03F         	goto	_main	;jump to C main() function
    91                           tblptru	equ	0xFF8
    92                           tblptrh	equ	0xFF7
    93                           tblptrl	equ	0xFF6
    94                           tablat	equ	0xFF5
    95                           postinc0	equ	0xFEE
    96                           postdec1	equ	0xFE5
    97                           fsr1l	equ	0xFE1
    98                           
    99                           	psect	dataCOMRAM
   100  000001                     __pdataCOMRAM:
   101                           	opt stack 0
   102  000001                     _character1:
   103                           	opt stack 0
   104  000001                     	ds	8
   105  000009                     _character2:
   106                           	opt stack 0
   107  000009                     	ds	8
   108  000011                     _character3:
   109                           	opt stack 0
   110  000011                     	ds	8
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           tblptrl	equ	0xFF6
   114                           tablat	equ	0xFF5
   115                           postinc0	equ	0xFEE
   116                           postdec1	equ	0xFE5
   117                           fsr1l	equ	0xFE1
   118                           
   119                           	psect	cstackCOMRAM
   120  000019                     __pcstackCOMRAM:
   121                           	opt stack 0
   122  000019                     MSdelay@val:
   123                           	opt stack 0
   124                           
   125                           ; 2 bytes @ 0x0
   126  000019                     	ds	2
   127  00001B                     MSdelay@i:
   128                           	opt stack 0
   129                           
   130                           ; 2 bytes @ 0x2
   131  00001B                     	ds	2
   132  00001D                     MSdelay@j:
   133                           	opt stack 0
   134                           
   135                           ; 2 bytes @ 0x4
   136  00001D                     	ds	2
   137  00001F                     LCD_Command@cmd:
   138                           	opt stack 0
   139  00001F                     LCD_Char@dat:
   140                           	opt stack 0
   141                           
   142                           ; 1 bytes @ 0x6
   143  00001F                     	ds	1
   144  000020                     LCD_Custom_Char@msg:
   145                           	opt stack 0
   146                           
   147                           ; 2 bytes @ 0x7
   148  000020                     	ds	2
   149  000022                     LCD_Custom_Char@loc:
   150                           	opt stack 0
   151                           
   152                           ; 1 bytes @ 0x9
   153  000022                     	ds	1
   154  000023                     LCD_Custom_Char@i:
   155                           	opt stack 0
   156                           
   157                           ; 1 bytes @ 0xA
   158  000023                     	ds	1
   159  000024                     tblptru	equ	0xFF8
   160                           tblptrh	equ	0xFF7
   161                           tblptrl	equ	0xFF6
   162                           tablat	equ	0xFF5
   163                           postinc0	equ	0xFEE
   164                           postdec1	equ	0xFE5
   165                           fsr1l	equ	0xFE1
   166                           
   167                           ; 0 bytes @ 0xB
   168 ;;
   169 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   170 ;;
   171 ;; *************** function _main *****************
   172 ;; Defined at:
   173 ;;		line 29 in file "animation.c"
   174 ;; Parameters:    Size  Location     Type
   175 ;;		None
   176 ;; Auto vars:     Size  Location     Type
   177 ;;  i               1    0        unsigned char 
   178 ;; Return value:  Size  Location     Type
   179 ;;		None               void
   180 ;; Registers used:
   181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   182 ;; Tracked objects:
   183 ;;		On entry : 0/0
   184 ;;		On exit  : 0/0
   185 ;;		Unchanged: 0/0
   186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   187 ;;      Params:         0       0       0       0       0       0       0       0       0
   188 ;;      Locals:         0       0       0       0       0       0       0       0       0
   189 ;;      Temps:          0       0       0       0       0       0       0       0       0
   190 ;;      Totals:         0       0       0       0       0       0       0       0       0
   191 ;;Total ram usage:        0 bytes
   192 ;; Hardware stack levels required when called:    3
   193 ;; This function calls:
   194 ;;		_LCD_Char
   195 ;;		_LCD_Clear
   196 ;;		_LCD_Command
   197 ;;		_LCD_Custom_Char
   198 ;;		_LCD_Init
   199 ;;		_MSdelay
   200 ;; This function is called by:
   201 ;;		Startup code after reset
   202 ;; This function uses a non-reentrant model
   203 ;;
   204                           
   205                           	psect	text0
   206  007E06                     __ptext0:
   207                           	opt stack 0
   208  007E06                     _main:
   209                           	opt stack 28
   210                           
   211                           ;animation.c: 31: char i;
   212                           ;animation.c: 32: OSCCON=0x72;
   213                           
   214                           ;incstack = 0
   215  007E06  0E72               	movlw	114
   216  007E08  6ED3               	movwf	4051,c	;volatile
   217                           
   218                           ;animation.c: 33: LCD_Init();
   219  007E0A  ECAE  F03E         	call	_LCD_Init	;wreg free
   220                           
   221                           ;animation.c: 35: LCD_Custom_Char(0,character1);
   222  007E0E  0E01               	movlw	low _character1
   223  007E10  6E20               	movwf	LCD_Custom_Char@msg,c
   224  007E12  0E00               	movlw	high _character1
   225  007E14  6E21               	movwf	LCD_Custom_Char@msg+1,c
   226  007E16  0E00               	movlw	0
   227  007E18  ECE4  F03E         	call	_LCD_Custom_Char
   228                           
   229                           ;animation.c: 36: LCD_Custom_Char(1,character2);
   230  007E1C  0E09               	movlw	low _character2
   231  007E1E  6E20               	movwf	LCD_Custom_Char@msg,c
   232  007E20  0E00               	movlw	high _character2
   233  007E22  6E21               	movwf	LCD_Custom_Char@msg+1,c
   234  007E24  0E01               	movlw	1
   235  007E26  ECE4  F03E         	call	_LCD_Custom_Char
   236                           
   237                           ;animation.c: 37: LCD_Custom_Char(2,character3);
   238  007E2A  0E11               	movlw	low _character3
   239  007E2C  6E20               	movwf	LCD_Custom_Char@msg,c
   240  007E2E  0E00               	movlw	high _character3
   241  007E30  6E21               	movwf	LCD_Custom_Char@msg+1,c
   242  007E32  0E02               	movlw	2
   243  007E34  ECE4  F03E         	call	_LCD_Custom_Char
   244  007E38  D000               	goto	l971
   245  007E3A                     l971:
   246                           
   247                           ;animation.c: 40: {
   248                           ;animation.c: 41: LCD_Clear();
   249  007E3A  EC6F  F03E         	call	_LCD_Clear	;wreg free
   250                           
   251                           ;animation.c: 42: LCD_Command(0x80);
   252  007E3E  0E80               	movlw	128
   253  007E40  EC7F  F03E         	call	_LCD_Command
   254                           
   255                           ;animation.c: 43: LCD_Char(0);
   256  007E44  0E00               	movlw	0
   257  007E46  EC8D  F03E         	call	_LCD_Char
   258                           
   259                           ;animation.c: 44: MSdelay(250);
   260  007E4A  0E00               	movlw	0
   261  007E4C  6E1A               	movwf	MSdelay@val+1,c
   262  007E4E  0EFA               	movlw	250
   263  007E50  6E19               	movwf	MSdelay@val,c
   264  007E52  ECC5  F03E         	call	_MSdelay	;wreg free
   265                           
   266                           ;animation.c: 46: LCD_Clear();
   267  007E56  EC6F  F03E         	call	_LCD_Clear	;wreg free
   268                           
   269                           ;animation.c: 47: LCD_Command(0xc1);
   270  007E5A  0EC1               	movlw	193
   271  007E5C  EC7F  F03E         	call	_LCD_Command
   272                           
   273                           ;animation.c: 48: LCD_Char(1);
   274  007E60  0E01               	movlw	1
   275  007E62  EC8D  F03E         	call	_LCD_Char
   276                           
   277                           ;animation.c: 49: MSdelay(250);
   278  007E66  0E00               	movlw	0
   279  007E68  6E1A               	movwf	MSdelay@val+1,c
   280  007E6A  0EFA               	movlw	250
   281  007E6C  6E19               	movwf	MSdelay@val,c
   282  007E6E  ECC5  F03E         	call	_MSdelay	;wreg free
   283                           
   284                           ;animation.c: 51: LCD_Clear();
   285  007E72  EC6F  F03E         	call	_LCD_Clear	;wreg free
   286                           
   287                           ;animation.c: 52: LCD_Command(0xc2);
   288  007E76  0EC2               	movlw	194
   289  007E78  EC7F  F03E         	call	_LCD_Command
   290                           
   291                           ;animation.c: 53: LCD_Char(2);
   292  007E7C  0E02               	movlw	2
   293  007E7E  EC8D  F03E         	call	_LCD_Char
   294                           
   295                           ;animation.c: 54: MSdelay(400);
   296  007E82  0E01               	movlw	1
   297  007E84  6E1A               	movwf	MSdelay@val+1,c
   298  007E86  0E90               	movlw	144
   299  007E88  6E19               	movwf	MSdelay@val,c
   300  007E8A  ECC5  F03E         	call	_MSdelay	;wreg free
   301                           
   302                           ;animation.c: 56: LCD_Clear();
   303  007E8E  EC6F  F03E         	call	_LCD_Clear	;wreg free
   304                           
   305                           ;animation.c: 57: LCD_Command(0xc3);
   306  007E92  0EC3               	movlw	195
   307  007E94  EC7F  F03E         	call	_LCD_Command
   308                           
   309                           ;animation.c: 58: LCD_Char(0);
   310  007E98  0E00               	movlw	0
   311  007E9A  EC8D  F03E         	call	_LCD_Char
   312                           
   313                           ;animation.c: 59: MSdelay(400);
   314  007E9E  0E01               	movlw	1
   315  007EA0  6E1A               	movwf	MSdelay@val+1,c
   316  007EA2  0E90               	movlw	144
   317  007EA4  6E19               	movwf	MSdelay@val,c
   318  007EA6  ECC5  F03E         	call	_MSdelay	;wreg free
   319                           
   320                           ;animation.c: 61: LCD_Clear();
   321  007EAA  EC6F  F03E         	call	_LCD_Clear	;wreg free
   322                           
   323                           ;animation.c: 62: LCD_Command(0xc4);
   324  007EAE  0EC4               	movlw	196
   325  007EB0  EC7F  F03E         	call	_LCD_Command
   326                           
   327                           ;animation.c: 63: LCD_Char(1);
   328  007EB4  0E01               	movlw	1
   329  007EB6  EC8D  F03E         	call	_LCD_Char
   330                           
   331                           ;animation.c: 64: MSdelay(400);
   332  007EBA  0E01               	movlw	1
   333  007EBC  6E1A               	movwf	MSdelay@val+1,c
   334  007EBE  0E90               	movlw	144
   335  007EC0  6E19               	movwf	MSdelay@val,c
   336  007EC2  ECC5  F03E         	call	_MSdelay	;wreg free
   337                           
   338                           ;animation.c: 66: LCD_Clear();
   339  007EC6  EC6F  F03E         	call	_LCD_Clear	;wreg free
   340                           
   341                           ;animation.c: 67: LCD_Command(0x85);
   342  007ECA  0E85               	movlw	133
   343  007ECC  EC7F  F03E         	call	_LCD_Command
   344                           
   345                           ;animation.c: 68: LCD_Char(2);
   346  007ED0  0E02               	movlw	2
   347  007ED2  EC8D  F03E         	call	_LCD_Char
   348                           
   349                           ;animation.c: 69: MSdelay(400);
   350  007ED6  0E01               	movlw	1
   351  007ED8  6E1A               	movwf	MSdelay@val+1,c
   352  007EDA  0E90               	movlw	144
   353  007EDC  6E19               	movwf	MSdelay@val,c
   354  007EDE  ECC5  F03E         	call	_MSdelay	;wreg free
   355                           
   356                           ;animation.c: 71: LCD_Clear();
   357  007EE2  EC6F  F03E         	call	_LCD_Clear	;wreg free
   358                           
   359                           ;animation.c: 72: LCD_Command(0x86);
   360  007EE6  0E86               	movlw	134
   361  007EE8  EC7F  F03E         	call	_LCD_Command
   362                           
   363                           ;animation.c: 73: LCD_Char(0);
   364  007EEC  0E00               	movlw	0
   365  007EEE  EC8D  F03E         	call	_LCD_Char
   366                           
   367                           ;animation.c: 74: MSdelay(400);
   368  007EF2  0E01               	movlw	1
   369  007EF4  6E1A               	movwf	MSdelay@val+1,c
   370  007EF6  0E90               	movlw	144
   371  007EF8  6E19               	movwf	MSdelay@val,c
   372  007EFA  ECC5  F03E         	call	_MSdelay	;wreg free
   373                           
   374                           ;animation.c: 76: LCD_Clear();
   375  007EFE  EC6F  F03E         	call	_LCD_Clear	;wreg free
   376                           
   377                           ;animation.c: 77: LCD_Command(0x87);
   378  007F02  0E87               	movlw	135
   379  007F04  EC7F  F03E         	call	_LCD_Command
   380                           
   381                           ;animation.c: 78: LCD_Char(1);
   382  007F08  0E01               	movlw	1
   383  007F0A  EC8D  F03E         	call	_LCD_Char
   384                           
   385                           ;animation.c: 79: MSdelay(500);
   386  007F0E  0E01               	movlw	1
   387  007F10  6E1A               	movwf	MSdelay@val+1,c
   388  007F12  0EF4               	movlw	244
   389  007F14  6E19               	movwf	MSdelay@val,c
   390  007F16  ECC5  F03E         	call	_MSdelay	;wreg free
   391                           
   392                           ;animation.c: 81: LCD_Clear();
   393  007F1A  EC6F  F03E         	call	_LCD_Clear	;wreg free
   394                           
   395                           ;animation.c: 82: LCD_Command(0x88);
   396  007F1E  0E88               	movlw	136
   397  007F20  EC7F  F03E         	call	_LCD_Command
   398                           
   399                           ;animation.c: 83: LCD_Char(0);
   400  007F24  0E00               	movlw	0
   401  007F26  EC8D  F03E         	call	_LCD_Char
   402                           
   403                           ;animation.c: 84: MSdelay(500);
   404  007F2A  0E01               	movlw	1
   405  007F2C  6E1A               	movwf	MSdelay@val+1,c
   406  007F2E  0EF4               	movlw	244
   407  007F30  6E19               	movwf	MSdelay@val,c
   408  007F32  ECC5  F03E         	call	_MSdelay	;wreg free
   409                           
   410                           ;animation.c: 86: LCD_Clear();
   411  007F36  EC6F  F03E         	call	_LCD_Clear	;wreg free
   412                           
   413                           ;animation.c: 87: LCD_Command(0x89);
   414  007F3A  0E89               	movlw	137
   415  007F3C  EC7F  F03E         	call	_LCD_Command
   416                           
   417                           ;animation.c: 88: LCD_Char(2);
   418  007F40  0E02               	movlw	2
   419  007F42  EC8D  F03E         	call	_LCD_Char
   420                           
   421                           ;animation.c: 89: MSdelay(500);
   422  007F46  0E01               	movlw	1
   423  007F48  6E1A               	movwf	MSdelay@val+1,c
   424  007F4A  0EF4               	movlw	244
   425  007F4C  6E19               	movwf	MSdelay@val,c
   426  007F4E  ECC5  F03E         	call	_MSdelay	;wreg free
   427                           
   428                           ;animation.c: 91: LCD_Clear();
   429  007F52  EC6F  F03E         	call	_LCD_Clear	;wreg free
   430                           
   431                           ;animation.c: 92: LCD_Command(0xca);
   432  007F56  0ECA               	movlw	202
   433  007F58  EC7F  F03E         	call	_LCD_Command
   434                           
   435                           ;animation.c: 93: LCD_Char(1);
   436  007F5C  0E01               	movlw	1
   437  007F5E  EC8D  F03E         	call	_LCD_Char
   438                           
   439                           ;animation.c: 94: MSdelay(500);
   440  007F62  0E01               	movlw	1
   441  007F64  6E1A               	movwf	MSdelay@val+1,c
   442  007F66  0EF4               	movlw	244
   443  007F68  6E19               	movwf	MSdelay@val,c
   444  007F6A  ECC5  F03E         	call	_MSdelay	;wreg free
   445                           
   446                           ;animation.c: 96: LCD_Clear();
   447  007F6E  EC6F  F03E         	call	_LCD_Clear	;wreg free
   448                           
   449                           ;animation.c: 97: LCD_Command(0xcb);
   450  007F72  0ECB               	movlw	203
   451  007F74  EC7F  F03E         	call	_LCD_Command
   452                           
   453                           ;animation.c: 98: LCD_Char(0);
   454  007F78  0E00               	movlw	0
   455  007F7A  EC8D  F03E         	call	_LCD_Char
   456                           
   457                           ;animation.c: 99: MSdelay(500);
   458  007F7E  0E01               	movlw	1
   459  007F80  6E1A               	movwf	MSdelay@val+1,c
   460  007F82  0EF4               	movlw	244
   461  007F84  6E19               	movwf	MSdelay@val,c
   462  007F86  ECC5  F03E         	call	_MSdelay	;wreg free
   463                           
   464                           ;animation.c: 101: LCD_Clear();
   465  007F8A  EC6F  F03E         	call	_LCD_Clear	;wreg free
   466                           
   467                           ;animation.c: 102: LCD_Command(0xcc);
   468  007F8E  0ECC               	movlw	204
   469  007F90  EC7F  F03E         	call	_LCD_Command
   470                           
   471                           ;animation.c: 103: LCD_Char(2);
   472  007F94  0E02               	movlw	2
   473  007F96  EC8D  F03E         	call	_LCD_Char
   474                           
   475                           ;animation.c: 104: MSdelay(600);
   476  007F9A  0E02               	movlw	2
   477  007F9C  6E1A               	movwf	MSdelay@val+1,c
   478  007F9E  0E58               	movlw	88
   479  007FA0  6E19               	movwf	MSdelay@val,c
   480  007FA2  ECC5  F03E         	call	_MSdelay	;wreg free
   481                           
   482                           ;animation.c: 106: LCD_Clear();
   483  007FA6  EC6F  F03E         	call	_LCD_Clear	;wreg free
   484                           
   485                           ;animation.c: 107: LCD_Command(0xcd);
   486  007FAA  0ECD               	movlw	205
   487  007FAC  EC7F  F03E         	call	_LCD_Command
   488                           
   489                           ;animation.c: 108: LCD_Char(1);
   490  007FB0  0E01               	movlw	1
   491  007FB2  EC8D  F03E         	call	_LCD_Char
   492                           
   493                           ;animation.c: 109: MSdelay(600);
   494  007FB6  0E02               	movlw	2
   495  007FB8  6E1A               	movwf	MSdelay@val+1,c
   496  007FBA  0E58               	movlw	88
   497  007FBC  6E19               	movwf	MSdelay@val,c
   498  007FBE  ECC5  F03E         	call	_MSdelay	;wreg free
   499                           
   500                           ;animation.c: 111: LCD_Clear();
   501  007FC2  EC6F  F03E         	call	_LCD_Clear	;wreg free
   502                           
   503                           ;animation.c: 112: LCD_Command(0x8e);
   504  007FC6  0E8E               	movlw	142
   505  007FC8  EC7F  F03E         	call	_LCD_Command
   506                           
   507                           ;animation.c: 113: LCD_Char(2);
   508  007FCC  0E02               	movlw	2
   509  007FCE  EC8D  F03E         	call	_LCD_Char
   510                           
   511                           ;animation.c: 114: MSdelay(600);
   512  007FD2  0E02               	movlw	2
   513  007FD4  6E1A               	movwf	MSdelay@val+1,c
   514  007FD6  0E58               	movlw	88
   515  007FD8  6E19               	movwf	MSdelay@val,c
   516  007FDA  ECC5  F03E         	call	_MSdelay	;wreg free
   517                           
   518                           ;animation.c: 116: LCD_Clear();
   519  007FDE  EC6F  F03E         	call	_LCD_Clear	;wreg free
   520                           
   521                           ;animation.c: 117: LCD_Command(0x8f);
   522  007FE2  0E8F               	movlw	143
   523  007FE4  EC7F  F03E         	call	_LCD_Command
   524                           
   525                           ;animation.c: 118: LCD_Char(0);
   526  007FE8  0E00               	movlw	0
   527  007FEA  EC8D  F03E         	call	_LCD_Char
   528                           
   529                           ;animation.c: 119: MSdelay(600);
   530  007FEE  0E02               	movlw	2
   531  007FF0  6E1A               	movwf	MSdelay@val+1,c
   532  007FF2  0E58               	movlw	88
   533  007FF4  6E19               	movwf	MSdelay@val,c
   534  007FF6  ECC5  F03E         	call	_MSdelay	;wreg free
   535  007FFA  D71F               	goto	l971
   536  007FFC  EF00  F000         	goto	start
   537  008000                     __end_of_main:
   538                           	opt stack 0
   539                           tblptru	equ	0xFF8
   540                           tblptrh	equ	0xFF7
   541                           tblptrl	equ	0xFF6
   542                           tablat	equ	0xFF5
   543                           postinc0	equ	0xFEE
   544                           postdec1	equ	0xFE5
   545                           fsr1l	equ	0xFE1
   546                           
   547 ;; *************** function _LCD_Init *****************
   548 ;; Defined at:
   549 ;;		line 124 in file "animation.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;		None               void
   556 ;; Registers used:
   557 ;;		wreg, status,2, status,0, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   563 ;;      Params:         0       0       0       0       0       0       0       0       0
   564 ;;      Locals:         0       0       0       0       0       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0       0       0       0       0
   566 ;;      Totals:         0       0       0       0       0       0       0       0       0
   567 ;;Total ram usage:        0 bytes
   568 ;; Hardware stack levels used:    1
   569 ;; Hardware stack levels required when called:    2
   570 ;; This function calls:
   571 ;;		_LCD_Command
   572 ;;		_MSdelay
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text1
   579  007D5C                     __ptext1:
   580                           	opt stack 0
   581  007D5C                     _LCD_Init:
   582                           	opt stack 28
   583                           
   584                           ;animation.c: 126: MSdelay(15);
   585                           
   586                           ;incstack = 0
   587  007D5C  0E00               	movlw	0
   588  007D5E  6E1A               	movwf	MSdelay@val+1,c
   589  007D60  0E0F               	movlw	15
   590  007D62  6E19               	movwf	MSdelay@val,c
   591  007D64  ECC5  F03E         	call	_MSdelay	;wreg free
   592                           
   593                           ;animation.c: 127: TRISB = 0x00;
   594  007D68  0E00               	movlw	0
   595  007D6A  6E93               	movwf	3987,c	;volatile
   596                           
   597                           ;animation.c: 128: TRISD = 0x00;
   598  007D6C  0E00               	movlw	0
   599  007D6E  6E95               	movwf	3989,c	;volatile
   600                           
   601                           ;animation.c: 129: LCD_Command(0x38);
   602  007D70  0E38               	movlw	56
   603  007D72  EC7F  F03E         	call	_LCD_Command
   604                           
   605                           ;animation.c: 130: LCD_Command(0x0c);
   606  007D76  0E0C               	movlw	12
   607  007D78  EC7F  F03E         	call	_LCD_Command
   608                           
   609                           ;animation.c: 131: LCD_Command(0x06);
   610  007D7C  0E06               	movlw	6
   611  007D7E  EC7F  F03E         	call	_LCD_Command
   612                           
   613                           ;animation.c: 132: LCD_Command(0x01);
   614  007D82  0E01               	movlw	1
   615  007D84  EC7F  F03E         	call	_LCD_Command
   616  007D88  0012               	return		;funcret
   617  007D8A                     __end_of_LCD_Init:
   618                           	opt stack 0
   619                           tblptru	equ	0xFF8
   620                           tblptrh	equ	0xFF7
   621                           tblptrl	equ	0xFF6
   622                           tablat	equ	0xFF5
   623                           postinc0	equ	0xFEE
   624                           postdec1	equ	0xFE5
   625                           fsr1l	equ	0xFE1
   626                           
   627 ;; *************** function _LCD_Custom_Char *****************
   628 ;; Defined at:
   629 ;;		line 189 in file "animation.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;  loc             1    wreg     unsigned char 
   632 ;;  msg             2    7[COMRAM] PTR unsigned char 
   633 ;;		 -> character3(8), character2(8), character1(8), 
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  loc             1    9[COMRAM] unsigned char 
   636 ;;  i               1   10[COMRAM] unsigned char 
   637 ;; Return value:  Size  Location     Type
   638 ;;		None               void
   639 ;; Registers used:
   640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   646 ;;      Params:         2       0       0       0       0       0       0       0       0
   647 ;;      Locals:         2       0       0       0       0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0       0       0       0       0
   649 ;;      Totals:         4       0       0       0       0       0       0       0       0
   650 ;;Total ram usage:        4 bytes
   651 ;; Hardware stack levels used:    1
   652 ;; Hardware stack levels required when called:    2
   653 ;; This function calls:
   654 ;;		_LCD_Char
   655 ;;		_LCD_Command
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text2
   662  007DC8                     __ptext2:
   663                           	opt stack 0
   664  007DC8                     _LCD_Custom_Char:
   665                           	opt stack 28
   666                           
   667                           ;incstack = 0
   668                           ;LCD_Custom_Char@loc stored from wreg
   669  007DC8  6E22               	movwf	LCD_Custom_Char@loc,c
   670                           
   671                           ;animation.c: 191: unsigned char i;
   672                           ;animation.c: 192: if(loc<8)
   673  007DCA  0E08               	movlw	8
   674  007DCC  6022               	cpfslt	LCD_Custom_Char@loc,c
   675  007DCE  D01A               	goto	l67
   676                           
   677                           ;animation.c: 193: {
   678                           ;animation.c: 194: LCD_Command(0x40+(loc*8));
   679  007DD0  5022               	movf	LCD_Custom_Char@loc,w,c
   680  007DD2  0D08               	mullw	8
   681  007DD4  50F3               	movf	prodl,w,c
   682  007DD6  0F40               	addlw	64
   683  007DD8  EC7F  F03E         	call	_LCD_Command
   684                           
   685                           ;animation.c: 195: for(i=0;i<8;i++)
   686  007DDC  0E00               	movlw	0
   687  007DDE  6E23               	movwf	LCD_Custom_Char@i,c
   688  007DE0                     l941:
   689  007DE0  0E07               	movlw	7
   690  007DE2  6423               	cpfsgt	LCD_Custom_Char@i,c
   691  007DE4  D001               	goto	l945
   692  007DE6  D00E               	goto	l67
   693  007DE8                     l945:
   694                           
   695                           ;animation.c: 196: LCD_Char(msg[i]);
   696  007DE8  5023               	movf	LCD_Custom_Char@i,w,c
   697  007DEA  0D01               	mullw	1
   698  007DEC  50F3               	movf	prodl,w,c
   699  007DEE  2420               	addwf	LCD_Custom_Char@msg,w,c
   700  007DF0  6ED9               	movwf	fsr2l,c
   701  007DF2  50F4               	movf	prodh,w,c
   702  007DF4  2021               	addwfc	LCD_Custom_Char@msg+1,w,c
   703  007DF6  6EDA               	movwf	fsr2h,c
   704  007DF8  50DF               	movf	indf2,w,c
   705  007DFA  EC8D  F03E         	call	_LCD_Char
   706  007DFE  2A23               	incf	LCD_Custom_Char@i,f,c
   707  007E00  D7EF               	goto	l941
   708  007E02  D000               	goto	l67
   709  007E04                     l67:
   710  007E04  0012               	return		;funcret
   711  007E06                     __end_of_LCD_Custom_Char:
   712                           	opt stack 0
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           prodh	equ	0xFF4
   718                           prodl	equ	0xFF3
   719                           postinc0	equ	0xFEE
   720                           postdec1	equ	0xFE5
   721                           fsr1l	equ	0xFE1
   722                           indf2	equ	0xFDF
   723                           fsr2h	equ	0xFDA
   724                           fsr2l	equ	0xFD9
   725                           
   726 ;; *************** function _LCD_Char *****************
   727 ;; Defined at:
   728 ;;		line 150 in file "animation.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  dat             1    wreg     unsigned char 
   731 ;; Auto vars:     Size  Location     Type
   732 ;;  dat             1    6[COMRAM] unsigned char 
   733 ;; Return value:  Size  Location     Type
   734 ;;		None               void
   735 ;; Registers used:
   736 ;;		wreg, status,2, status,0, cstack
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   742 ;;      Params:         0       0       0       0       0       0       0       0       0
   743 ;;      Locals:         1       0       0       0       0       0       0       0       0
   744 ;;      Temps:          0       0       0       0       0       0       0       0       0
   745 ;;      Totals:         1       0       0       0       0       0       0       0       0
   746 ;;Total ram usage:        1 bytes
   747 ;; Hardware stack levels used:    1
   748 ;; Hardware stack levels required when called:    1
   749 ;; This function calls:
   750 ;;		_MSdelay
   751 ;; This function is called by:
   752 ;;		_main
   753 ;;		_LCD_Custom_Char
   754 ;;		_LCD_String
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text3
   759  007D1A                     __ptext3:
   760                           	opt stack 0
   761  007D1A                     _LCD_Char:
   762                           	opt stack 28
   763                           
   764                           ;incstack = 0
   765                           ;LCD_Char@dat stored from wreg
   766  007D1A  6E1F               	movwf	LCD_Char@dat,c
   767                           
   768                           ;animation.c: 152: LATB= dat;
   769  007D1C  C01F  FF8A         	movff	LCD_Char@dat,3978	;volatile
   770                           
   771                           ;animation.c: 153: LATD0 = 1;
   772  007D20  808C               	bsf	3980,0,c	;volatile
   773                           
   774                           ;animation.c: 154: LATD1=1;
   775  007D22  828C               	bsf	3980,1,c	;volatile
   776                           
   777                           ;animation.c: 155: __nop();
   778  007D24  F000               	nop	
   779                           
   780                           ;animation.c: 156: LATD1=0;
   781  007D26  928C               	bcf	3980,1,c	;volatile
   782                           
   783                           ;animation.c: 157: MSdelay(1);
   784  007D28  0E00               	movlw	0
   785  007D2A  6E1A               	movwf	MSdelay@val+1,c
   786  007D2C  0E01               	movlw	1
   787  007D2E  6E19               	movwf	MSdelay@val,c
   788  007D30  ECC5  F03E         	call	_MSdelay	;wreg free
   789  007D34  0012               	return		;funcret
   790  007D36                     __end_of_LCD_Char:
   791                           	opt stack 0
   792                           tblptru	equ	0xFF8
   793                           tblptrh	equ	0xFF7
   794                           tblptrl	equ	0xFF6
   795                           tablat	equ	0xFF5
   796                           prodh	equ	0xFF4
   797                           prodl	equ	0xFF3
   798                           postinc0	equ	0xFEE
   799                           postdec1	equ	0xFE5
   800                           fsr1l	equ	0xFE1
   801                           indf2	equ	0xFDF
   802                           fsr2h	equ	0xFDA
   803                           fsr2l	equ	0xFD9
   804                           
   805 ;; *************** function _LCD_Clear *****************
   806 ;; Defined at:
   807 ;;		line 135 in file "animation.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;		None               void
   814 ;; Registers used:
   815 ;;		wreg, status,2, status,0, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   821 ;;      Params:         0       0       0       0       0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0       0       0       0       0
   823 ;;      Temps:          0       0       0       0       0       0       0       0       0
   824 ;;      Totals:         0       0       0       0       0       0       0       0       0
   825 ;;Total ram usage:        0 bytes
   826 ;; Hardware stack levels used:    1
   827 ;; Hardware stack levels required when called:    2
   828 ;; This function calls:
   829 ;;		_LCD_Command
   830 ;; This function is called by:
   831 ;;		_main
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text4
   836  007CDE                     __ptext4:
   837                           	opt stack 0
   838  007CDE                     _LCD_Clear:
   839                           	opt stack 28
   840                           
   841                           ;animation.c: 137: LCD_Command(0x01);
   842                           
   843                           ;incstack = 0
   844  007CDE  0E01               	movlw	1
   845  007CE0  EC7F  F03E         	call	_LCD_Command
   846  007CE4  0012               	return		;funcret
   847  007CE6                     __end_of_LCD_Clear:
   848                           	opt stack 0
   849                           tblptru	equ	0xFF8
   850                           tblptrh	equ	0xFF7
   851                           tblptrl	equ	0xFF6
   852                           tablat	equ	0xFF5
   853                           prodh	equ	0xFF4
   854                           prodl	equ	0xFF3
   855                           postinc0	equ	0xFEE
   856                           postdec1	equ	0xFE5
   857                           fsr1l	equ	0xFE1
   858                           indf2	equ	0xFDF
   859                           fsr2h	equ	0xFDA
   860                           fsr2l	equ	0xFD9
   861                           
   862 ;; *************** function _LCD_Command *****************
   863 ;; Defined at:
   864 ;;		line 140 in file "animation.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  cmd             1    wreg     unsigned char 
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  cmd             1    6[COMRAM] unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;		None               void
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   878 ;;      Params:         0       0       0       0       0       0       0       0       0
   879 ;;      Locals:         1       0       0       0       0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0       0       0       0       0
   881 ;;      Totals:         1       0       0       0       0       0       0       0       0
   882 ;;Total ram usage:        1 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    1
   885 ;; This function calls:
   886 ;;		_MSdelay
   887 ;; This function is called by:
   888 ;;		_main
   889 ;;		_LCD_Init
   890 ;;		_LCD_Clear
   891 ;;		_LCD_Custom_Char
   892 ;;		_LCD_String_xy
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           	psect	text5
   897  007CFE                     __ptext5:
   898                           	opt stack 0
   899  007CFE                     _LCD_Command:
   900                           	opt stack 28
   901                           
   902                           ;incstack = 0
   903                           ;LCD_Command@cmd stored from wreg
   904  007CFE  6E1F               	movwf	LCD_Command@cmd,c
   905                           
   906                           ;animation.c: 142: LATB= cmd;
   907  007D00  C01F  FF8A         	movff	LCD_Command@cmd,3978	;volatile
   908                           
   909                           ;animation.c: 143: LATD0 = 0;
   910  007D04  908C               	bcf	3980,0,c	;volatile
   911                           
   912                           ;animation.c: 144: LATD1 = 1;
   913  007D06  828C               	bsf	3980,1,c	;volatile
   914                           
   915                           ;animation.c: 145: __nop();
   916  007D08  F000               	nop	
   917                           
   918                           ;animation.c: 146: LATD1 = 0;
   919  007D0A  928C               	bcf	3980,1,c	;volatile
   920                           
   921                           ;animation.c: 147: MSdelay(2);
   922  007D0C  0E00               	movlw	0
   923  007D0E  6E1A               	movwf	MSdelay@val+1,c
   924  007D10  0E02               	movlw	2
   925  007D12  6E19               	movwf	MSdelay@val,c
   926  007D14  ECC5  F03E         	call	_MSdelay	;wreg free
   927  007D18  0012               	return		;funcret
   928  007D1A                     __end_of_LCD_Command:
   929                           	opt stack 0
   930                           tblptru	equ	0xFF8
   931                           tblptrh	equ	0xFF7
   932                           tblptrl	equ	0xFF6
   933                           tablat	equ	0xFF5
   934                           prodh	equ	0xFF4
   935                           prodl	equ	0xFF3
   936                           postinc0	equ	0xFEE
   937                           postdec1	equ	0xFE5
   938                           fsr1l	equ	0xFE1
   939                           indf2	equ	0xFDF
   940                           fsr2h	equ	0xFDA
   941                           fsr2l	equ	0xFD9
   942                           
   943 ;; *************** function _MSdelay *****************
   944 ;; Defined at:
   945 ;;		line 201 in file "animation.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  val             2    0[COMRAM] unsigned int 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  j               2    4[COMRAM] unsigned int 
   950 ;;  i               2    2[COMRAM] unsigned int 
   951 ;; Return value:  Size  Location     Type
   952 ;;		None               void
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   960 ;;      Params:         2       0       0       0       0       0       0       0       0
   961 ;;      Locals:         4       0       0       0       0       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0       0       0       0       0
   963 ;;      Totals:         6       0       0       0       0       0       0       0       0
   964 ;;Total ram usage:        6 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; This function calls:
   967 ;;		Nothing
   968 ;; This function is called by:
   969 ;;		_main
   970 ;;		_LCD_Init
   971 ;;		_LCD_Command
   972 ;;		_LCD_Char
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text6
   977  007D8A                     __ptext6:
   978                           	opt stack 0
   979  007D8A                     _MSdelay:
   980                           	opt stack 30
   981                           
   982                           ;animation.c: 203: unsigned int i,j;
   983                           ;animation.c: 204: for(i=0;i<=val;i++)
   984                           
   985                           ;incstack = 0
   986  007D8A  0E00               	movlw	0
   987  007D8C  6E1C               	movwf	MSdelay@i+1,c
   988  007D8E  0E00               	movlw	0
   989  007D90  6E1B               	movwf	MSdelay@i,c
   990  007D92  D013               	goto	l903
   991  007D94                     l891:
   992                           
   993                           ;animation.c: 205: for(j=0;j<81;j++);
   994  007D94  0E00               	movlw	0
   995  007D96  6E1E               	movwf	MSdelay@j+1,c
   996  007D98  0E00               	movlw	0
   997  007D9A  6E1D               	movwf	MSdelay@j,c
   998  007D9C                     l893:
   999  007D9C  501E               	movf	MSdelay@j+1,w,c
  1000  007D9E  E10A               	bnz	l901
  1001  007DA0  0E51               	movlw	81
  1002  007DA2  5C1D               	subwf	MSdelay@j,w,c
  1003  007DA4  B0D8               	btfsc	status,0,c
  1004  007DA6  D006               	goto	l901
  1005  007DA8  D001               	goto	l897
  1006  007DAA  D004               	goto	l901
  1007  007DAC                     l897:
  1008  007DAC  4A1D               	infsnz	MSdelay@j,f,c
  1009  007DAE  2A1E               	incf	MSdelay@j+1,f,c
  1010  007DB0  D7F5               	goto	l893
  1011  007DB2  D000               	goto	l901
  1012  007DB4                     l901:
  1013  007DB4  4A1B               	infsnz	MSdelay@i,f,c
  1014  007DB6  2A1C               	incf	MSdelay@i+1,f,c
  1015  007DB8  D000               	goto	l903
  1016  007DBA                     l903:
  1017  007DBA  501B               	movf	MSdelay@i,w,c
  1018  007DBC  5C19               	subwf	MSdelay@val,w,c
  1019  007DBE  501C               	movf	MSdelay@i+1,w,c
  1020  007DC0  581A               	subwfb	MSdelay@val+1,w,c
  1021  007DC2  B0D8               	btfsc	status,0,c
  1022  007DC4  D7E7               	goto	l891
  1023  007DC6  0012               	return		;funcret
  1024  007DC8                     __end_of_MSdelay:
  1025                           	opt stack 0
  1026  0000                     tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           prodh	equ	0xFF4
  1031                           prodl	equ	0xFF3
  1032                           postinc0	equ	0xFEE
  1033                           postdec1	equ	0xFE5
  1034                           fsr1l	equ	0xFE1
  1035                           indf2	equ	0xFDF
  1036                           fsr2h	equ	0xFDA
  1037                           fsr2l	equ	0xFD9
  1038                           status	equ	0xFD8
  1039                           tblptru	equ	0xFF8
  1040                           tblptrh	equ	0xFF7
  1041                           tblptrl	equ	0xFF6
  1042                           tablat	equ	0xFF5
  1043                           prodh	equ	0xFF4
  1044                           prodl	equ	0xFF3
  1045                           postinc0	equ	0xFEE
  1046                           postdec1	equ	0xFE5
  1047                           fsr1l	equ	0xFE1
  1048                           indf2	equ	0xFDF
  1049                           fsr2h	equ	0xFDA
  1050                           fsr2l	equ	0xFD9
  1051                           status	equ	0xFD8
  1052                           
  1053                           	psect	rparam
  1054  0000                     tblptru	equ	0xFF8
  1055                           tblptrh	equ	0xFF7
  1056                           tblptrl	equ	0xFF6
  1057                           tablat	equ	0xFF5
  1058                           prodh	equ	0xFF4
  1059                           prodl	equ	0xFF3
  1060                           postinc0	equ	0xFEE
  1061                           postdec1	equ	0xFE5
  1062                           fsr1l	equ	0xFE1
  1063                           indf2	equ	0xFDF
  1064                           fsr2h	equ	0xFDA
  1065                           fsr2l	equ	0xFD9
  1066                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> character3(COMRAM[8]), character2(COMRAM[8]), character1(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_LCD_Custom_Char
    _LCD_Init->_LCD_Command
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Char->_MSdelay
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9217
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                    _LCD_Custom_Char
                           _LCD_Init
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    2220
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Custom_Char                                      4     2      2    2535
                                              7 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             1     1      0    1121
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0    1121
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0    1121
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2    1099
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
     _MSdelay
   _LCD_Clear
     _LCD_Command
       _MSdelay
   _LCD_Command
     _MSdelay
   _LCD_Custom_Char
     _LCD_Char
       _MSdelay
     _LCD_Command
       _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _MSdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      B      23       1       36.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      20        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Jul 29 19:17:01 2016

            ?_LCD_Command 0019                        l67 7E04               __CFG_BOR$ON 000000  
             __CFG_BORV$3 000000           _LCD_Custom_Char 7DC8              __CFG_CP0$OFF 000000  
            __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000  
                     l901 7DB4                       l903 7DBA                       l941 7DE0  
                     l945 7DE8                       l891 7D94                       l971 7E3A  
                     l893 7D9C                       l897 7DAC              __CFG_CPB$OFF 000000  
            __CFG_CPD$OFF 000000              __CFG_LVP$OFF 000000               LCD_Char@dat 001F  
            __CFG_WDT$OFF 000000                      _LATB 000F8A                      _main 7E06  
      __size_of_LCD_Clear 0008                      fsr1l 000FE1                      indf2 000FDF  
                    fsr2l 000FD9                      prodh 000FF4                      prodl 000FF3  
                    start 0000           __end_of_MSdelay 7DC8             __CFG_IESO$OFF 000000  
            ___param_bank 000010          __end_of_LCD_Char 7D36          __end_of_LCD_Init 7D8A  
           __CFG_PLLDIV$1 000000            __CFG_CCP2MX$ON 000000                     ?_main 0019  
                   _LATD0 007C60                     _LATD1 007C61             __CFG_USBDIV$1 000000  
                   _TRISB 000F93                     _TRISD 000F95             __CFG_PWRT$OFF 000000  
           __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000  
           __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000  
          __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000  
           __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000  
          __CFG_EBTRB$OFF 000000                     tablat 000FF5                     status 000FD8  
          __CFG_ICPRT$OFF 000000            __CFG_PBADEN$ON 000000            __CFG_MCLRE$OFF 000000  
 __end_of_LCD_Custom_Char 7E06           __initialization 7D36              __end_of_main 8000  
                  ??_main 0024         __end_of_LCD_Clear 7CE6             __activetblptr 000000  
               ??_MSdelay 001B                    _OSCCON 000FD3            __CFG_XINST$OFF 000000  
          __CFG_STVREN$ON 000000      __size_of_LCD_Command 001C          LCD_Custom_Char@i 0023  
            __pdataCOMRAM 0001                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                 ?_LCD_Char 0019                __accesstop 0060  
 __end_of__initialization 7D56                 ?_LCD_Init 0019             ___rparam_used 000001  
        ?_LCD_Custom_Char 0020            __pcstackCOMRAM 0019                ??_LCD_Char 001F  
              _character1 0001                _character2 0009                _character3 0011  
              ??_LCD_Init 0020                   _MSdelay 7D8A           __CFG_VREGEN$OFF 000000  
                 __Hparam 0000                   __Lparam 0000                   __pcinit 7D36  
                 __ramtop 0800                   __ptext0 7E06                   __ptext1 7D5C  
                 __ptext2 7DC8                   __ptext3 7D1A                   __ptext4 7CDE  
                 __ptext5 7CFE                   __ptext6 7D8A                 _LCD_Clear 7CDE  
    end_of_initialization 7D56            LCD_Command@cmd 001F                   postdec1 000FE5  
                 postinc0 000FEE                ?_LCD_Clear 0019         __size_of_LCD_Char 001C  
       __size_of_LCD_Init 002E             ??_LCD_Command 001F             __pidataCOMRAM 7CE6  
     start_initialization 7D36          __CFG_LPT1OSC$OFF 000000  __size_of_LCD_Custom_Char 003E  
     __end_of_LCD_Command 7D1A               ??_LCD_Clear 0020                  ?_MSdelay 0019  
                MSdelay@i 001B                  MSdelay@j 001D                  _LCD_Char 7D1A  
                _LCD_Init 7D5C          __CFG_WDTPS$32768 000000               _LCD_Command 7CFE  
       ??_LCD_Custom_Char 0022                 copy_data0 7D4A          __size_of_MSdelay 003E  
                __Hrparam 0000                  __Lrparam 0000             __size_of_main 01FA  
              MSdelay@val 0019     __CFG_CPUDIV$OSC1_PLL2 000000        LCD_Custom_Char@loc 0022  
      LCD_Custom_Char@msg 0020       __CFG_FOSC$INTOSC_EC 000000  
