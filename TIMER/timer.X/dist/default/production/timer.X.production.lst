

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Dec 01 12:30:13 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           ; Version 1.41
    18                           ; Generated 25/01/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _PORTAbits	set	3968
    52  0000                     _TRISAbits	set	3986
    53  0000                     _LATD	set	3980
    54  0000                     _TRISD	set	3989
    55  0000                     _TMR0H	set	4055
    56  0000                     _TMR0L	set	4054
    57  0000                     _T0CONbits	set	4053
    58  0000                     _INTCONbits	set	4082
    59                           
    60                           ; #config settings
    61  0000                     
    62                           	psect	cinit
    63  00023A                     __pcinit:
    64                           	opt stack 0
    65  00023A                     start_initialization:
    66                           	opt stack 0
    67  00023A                     __initialization:
    68                           	opt stack 0
    69                           
    70                           ; Clear objects allocated to COMRAM (1 bytes)
    71  00023A  6A18               	clrf	__pbssCOMRAM& (0+255),c
    72  00023C                     end_of_initialization:
    73                           	opt stack 0
    74  00023C                     __end_of__initialization:
    75                           	opt stack 0
    76  00023C  9019               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    77  00023E  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    78  000240  0100               	movlb	0
    79  000242  EF09  F000         	goto	_main	;jump to C main() function
    80                           
    81                           	psect	bssCOMRAM
    82  000018                     __pbssCOMRAM:
    83                           	opt stack 0
    84  000018                     _count:
    85                           	opt stack 0
    86  000018                     	ds	1
    87                           
    88                           	psect	cstackCOMRAM
    89  000001                     __pcstackCOMRAM:
    90                           	opt stack 0
    91  000001                     ??_ISR_TIMER_0:
    92  000001                     
    93                           ; 2 bytes @ 0x0
    94  000001                     	ds	14
    95  00000F                     ?___awdiv:
    96                           	opt stack 0
    97  00000F                     ?___awmod:
    98                           	opt stack 0
    99  00000F                     ___awdiv@dividend:
   100                           	opt stack 0
   101  00000F                     ___awmod@dividend:
   102                           	opt stack 0
   103                           
   104                           ; 2 bytes @ 0xE
   105  00000F                     	ds	2
   106  000011                     ___awdiv@divisor:
   107                           	opt stack 0
   108  000011                     ___awmod@divisor:
   109                           	opt stack 0
   110                           
   111                           ; 2 bytes @ 0x10
   112  000011                     	ds	2
   113  000013                     ___awdiv@counter:
   114                           	opt stack 0
   115  000013                     ___awmod@counter:
   116                           	opt stack 0
   117                           
   118                           ; 1 bytes @ 0x12
   119  000013                     	ds	1
   120  000014                     ___awdiv@sign:
   121                           	opt stack 0
   122  000014                     ___awmod@sign:
   123                           	opt stack 0
   124                           
   125                           ; 1 bytes @ 0x13
   126  000014                     	ds	1
   127  000015                     ___awdiv@quotient:
   128                           	opt stack 0
   129                           
   130                           ; 2 bytes @ 0x14
   131  000015                     	ds	2
   132  000017                     ??_main:
   133                           
   134                           ; 1 bytes @ 0x16
   135  000017                     	ds	1
   136                           
   137 ;;
   138 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   139 ;;
   140 ;; *************** function _main *****************
   141 ;; Defined at:
   142 ;;		line 29 in file "temporizador.c"
   143 ;; Parameters:    Size  Location     Type
   144 ;;		None
   145 ;; Auto vars:     Size  Location     Type
   146 ;;		None
   147 ;; Return value:  Size  Location     Type
   148 ;;                  2   22[None  ] int 
   149 ;; Registers used:
   150 ;;		wreg, status,2, status,0, cstack
   151 ;; Tracked objects:
   152 ;;		On entry : 0/0
   153 ;;		On exit  : 0/0
   154 ;;		Unchanged: 0/0
   155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   156 ;;      Params:         0       0       0       0       0       0       0       0       0
   157 ;;      Locals:         0       0       0       0       0       0       0       0       0
   158 ;;      Temps:          1       0       0       0       0       0       0       0       0
   159 ;;      Totals:         1       0       0       0       0       0       0       0       0
   160 ;;Total ram usage:        1 bytes
   161 ;; Hardware stack levels required when called:    2
   162 ;; This function calls:
   163 ;;		___awdiv
   164 ;;		___awmod
   165 ;; This function is called by:
   166 ;;		Startup code after reset
   167 ;; This function uses a non-reentrant model
   168 ;;
   169                           
   170                           	psect	text0
   171  000012                     __ptext0:
   172                           	opt stack 0
   173  000012                     _main:
   174                           	opt stack 29
   175                           
   176                           ;temporizador.c: 30: INTCONbits.GIE = 0;
   177                           
   178                           ;incstack = 0
   179  000012  9EF2               	bcf	intcon,7,c	;volatile
   180                           
   181                           ;temporizador.c: 31: T0CONbits.T0CS = 0;
   182  000014  9AD5               	bcf	4053,5,c	;volatile
   183                           
   184                           ;temporizador.c: 32: T0CONbits.PSA = 0;
   185  000016  96D5               	bcf	4053,3,c	;volatile
   186                           
   187                           ;temporizador.c: 33: T0CONbits.T0PS = 0b001;
   188  000018  50D5               	movf	4053,w,c	;volatile
   189  00001A  0BF8               	andlw	-8
   190  00001C  0901               	iorlw	1
   191  00001E  6ED5               	movwf	4053,c	;volatile
   192                           
   193                           ;temporizador.c: 34: T0CONbits.T08BIT = 0;
   194  000020  9CD5               	bcf	4053,6,c	;volatile
   195                           
   196                           ;temporizador.c: 35: TMR0L = 0xDA;
   197  000022  0EDA               	movlw	218
   198  000024  6ED6               	movwf	4054,c	;volatile
   199                           
   200                           ;temporizador.c: 36: TMR0H = 0x0B;
   201  000026  0E0B               	movlw	11
   202  000028  6ED7               	movwf	4055,c	;volatile
   203                           
   204                           ;temporizador.c: 37: T0CONbits.TMR0ON = 1;
   205  00002A  8ED5               	bsf	4053,7,c	;volatile
   206                           
   207                           ;temporizador.c: 38: TRISD = 0x00;
   208  00002C  0E00               	movlw	0
   209  00002E  6E95               	movwf	3989,c	;volatile
   210                           
   211                           ;temporizador.c: 39: LATD = 0x00;
   212  000030  0E00               	movlw	0
   213  000032  6E8C               	movwf	3980,c	;volatile
   214                           
   215                           ;temporizador.c: 40: TRISAbits.RA4 = 1;
   216  000034  8892               	bsf	3986,4,c	;volatile
   217                           
   218                           ;temporizador.c: 41: INTCONbits.TMR0IF = 0;
   219  000036  94F2               	bcf	intcon,2,c	;volatile
   220                           
   221                           ;temporizador.c: 42: INTCONbits.TMR0IE = 1;
   222  000038  8AF2               	bsf	intcon,5,c	;volatile
   223                           
   224                           ;temporizador.c: 43: INTCONbits.PEIE = 1;
   225  00003A  8CF2               	bsf	intcon,6,c	;volatile
   226                           
   227                           ;temporizador.c: 44: INTCONbits.GIE = 1;
   228  00003C  8EF2               	bsf	intcon,7,c	;volatile
   229  00003E                     l856:
   230                           
   231                           ;temporizador.c: 47: LATD = (1 << 4) + (count % 10);
   232  00003E  C018  F00F         	movff	_count,___awmod@dividend
   233  000042  6A10               	clrf	___awmod@dividend+1,c
   234  000044  0E00               	movlw	0
   235  000046  6E12               	movwf	___awmod@divisor+1,c
   236  000048  0E0A               	movlw	10
   237  00004A  6E11               	movwf	___awmod@divisor,c
   238  00004C  ECE5  F000         	call	___awmod	;wreg free
   239  000050  500F               	movf	?___awmod,w,c
   240  000052  0F10               	addlw	16
   241  000054  6E8C               	movwf	3980,c	;volatile
   242                           
   243                           ;temporizador.c: 48: _delay((unsigned long)((20)*(1000000L/4000.0)));
   244  000056  0E07               	movlw	7
   245  000058  6E17               	movwf	??_main& (0+255),c
   246  00005A  0E7D               	movlw	125
   247  00005C                     u307:
   248  00005C  2EE8               	decfsz	wreg,f,c
   249  00005E  D7FE               	bra	u307
   250  000060  2E17               	decfsz	??_main& (0+255),f,c
   251  000062  D7FC               	bra	u307
   252  000064  F000               	nop	
   253                           
   254                           ;temporizador.c: 49: LATD = (1 << 5) + (count / 10);
   255  000066  C018  F00F         	movff	_count,___awdiv@dividend
   256  00006A  6A10               	clrf	___awdiv@dividend+1,c
   257  00006C  0E00               	movlw	0
   258  00006E  6E12               	movwf	___awdiv@divisor+1,c
   259  000070  0E0A               	movlw	10
   260  000072  6E11               	movwf	___awdiv@divisor,c
   261  000074  ECA3  F000         	call	___awdiv	;wreg free
   262  000078  500F               	movf	?___awdiv,w,c
   263  00007A  0F20               	addlw	32
   264  00007C  6E8C               	movwf	3980,c	;volatile
   265                           
   266                           ;temporizador.c: 50: _delay((unsigned long)((20)*(1000000L/4000.0)));
   267  00007E  0E07               	movlw	7
   268  000080  6E17               	movwf	??_main& (0+255),c
   269  000082  0E7D               	movlw	125
   270  000084                     u317:
   271  000084  2EE8               	decfsz	wreg,f,c
   272  000086  D7FE               	bra	u317
   273  000088  2E17               	decfsz	??_main& (0+255),f,c
   274  00008A  D7FC               	bra	u317
   275  00008C  F000               	nop	
   276                           
   277                           ;temporizador.c: 53: if (!PORTAbits.RA4) {
   278  00008E  B880               	btfsc	3968,4,c	;volatile
   279  000090  D7D6               	goto	l856
   280                           
   281                           ;temporizador.c: 54: _delay((unsigned long)((50)*(1000000L/4000.0)));
   282  000092  0E11               	movlw	17
   283  000094  6E17               	movwf	??_main& (0+255),c
   284  000096  0E3A               	movlw	58
   285  000098                     u327:
   286  000098  2EE8               	decfsz	wreg,f,c
   287  00009A  D7FE               	bra	u327
   288  00009C  2E17               	decfsz	??_main& (0+255),f,c
   289  00009E  D7FC               	bra	u327
   290  0000A0  D000               	nop2	
   291                           
   292                           ;temporizador.c: 55: count = 0;
   293  0000A2  0E00               	movlw	0
   294  0000A4  6E18               	movwf	_count,c
   295                           
   296                           ;temporizador.c: 56: TMR0L = 0xDA;
   297  0000A6  0EDA               	movlw	218
   298  0000A8  6ED6               	movwf	4054,c	;volatile
   299                           
   300                           ;temporizador.c: 57: TMR0H = 0x0B;
   301  0000AA  0E0B               	movlw	11
   302  0000AC  6ED7               	movwf	4055,c	;volatile
   303                           
   304                           ;temporizador.c: 58: INTCONbits.TMR0IF = 0;
   305  0000AE  94F2               	bcf	intcon,2,c	;volatile
   306  0000B0  D7C6               	goto	l856
   307  0000B2                     __end_of_main:
   308                           	opt stack 0
   309                           intcon	equ	0xFF2
   310                           wreg	equ	0xFE8
   311                           
   312 ;; *************** function ___awmod *****************
   313 ;; Defined at:
   314 ;;		line 8 in file "D:\mplab\sources\common\awmod.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;  dividend        2   14[COMRAM] int 
   317 ;;  divisor         2   16[COMRAM] int 
   318 ;; Auto vars:     Size  Location     Type
   319 ;;  sign            1   19[COMRAM] unsigned char 
   320 ;;  counter         1   18[COMRAM] unsigned char 
   321 ;; Return value:  Size  Location     Type
   322 ;;                  2   14[COMRAM] int 
   323 ;; Registers used:
   324 ;;		wreg, status,2, status,0
   325 ;; Tracked objects:
   326 ;;		On entry : 0/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   330 ;;      Params:         4       0       0       0       0       0       0       0       0
   331 ;;      Locals:         2       0       0       0       0       0       0       0       0
   332 ;;      Temps:          0       0       0       0       0       0       0       0       0
   333 ;;      Totals:         6       0       0       0       0       0       0       0       0
   334 ;;Total ram usage:        6 bytes
   335 ;; Hardware stack levels used:    1
   336 ;; Hardware stack levels required when called:    1
   337 ;; This function calls:
   338 ;;		Nothing
   339 ;; This function is called by:
   340 ;;		_main
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           	psect	text1
   345  0001CA                     __ptext1:
   346                           	opt stack 0
   347  0001CA                     ___awmod:
   348                           	opt stack 29
   349                           
   350                           ;incstack = 0
   351  0001CA  0E00               	movlw	0
   352  0001CC  6E14               	movwf	___awmod@sign,c
   353  0001CE  AE10               	btfss	___awmod@dividend+1,7,c
   354  0001D0  D006               	goto	l810
   355  0001D2  6C0F               	negf	___awmod@dividend,c
   356  0001D4  1E10               	comf	___awmod@dividend+1,f,c
   357  0001D6  B0D8               	btfsc	status,0,c
   358  0001D8  2A10               	incf	___awmod@dividend+1,f,c
   359  0001DA  0E01               	movlw	1
   360  0001DC  6E14               	movwf	___awmod@sign,c
   361  0001DE                     l810:
   362  0001DE  AE12               	btfss	___awmod@divisor+1,7,c
   363  0001E0  D004               	goto	l814
   364  0001E2  6C11               	negf	___awmod@divisor,c
   365  0001E4  1E12               	comf	___awmod@divisor+1,f,c
   366  0001E6  B0D8               	btfsc	status,0,c
   367  0001E8  2A12               	incf	___awmod@divisor+1,f,c
   368  0001EA                     l814:
   369  0001EA  5011               	movf	___awmod@divisor,w,c
   370  0001EC  1012               	iorwf	___awmod@divisor+1,w,c
   371  0001EE  B4D8               	btfsc	status,2,c
   372  0001F0  D018               	goto	l830
   373  0001F2  0E01               	movlw	1
   374  0001F4  6E13               	movwf	___awmod@counter,c
   375  0001F6  D004               	goto	l820
   376  0001F8                     l818:
   377  0001F8  90D8               	bcf	status,0,c
   378  0001FA  3611               	rlcf	___awmod@divisor,f,c
   379  0001FC  3612               	rlcf	___awmod@divisor+1,f,c
   380  0001FE  2A13               	incf	___awmod@counter,f,c
   381  000200                     l820:
   382  000200  AE12               	btfss	___awmod@divisor+1,7,c
   383  000202  D7FA               	goto	l818
   384  000204                     l822:
   385  000204  5011               	movf	___awmod@divisor,w,c
   386  000206  5C0F               	subwf	___awmod@dividend,w,c
   387  000208  5012               	movf	___awmod@divisor+1,w,c
   388  00020A  5810               	subwfb	___awmod@dividend+1,w,c
   389  00020C  A0D8               	btfss	status,0,c
   390  00020E  D004               	goto	l826
   391  000210  5011               	movf	___awmod@divisor,w,c
   392  000212  5E0F               	subwf	___awmod@dividend,f,c
   393  000214  5012               	movf	___awmod@divisor+1,w,c
   394  000216  5A10               	subwfb	___awmod@dividend+1,f,c
   395  000218                     l826:
   396  000218  90D8               	bcf	status,0,c
   397  00021A  3212               	rrcf	___awmod@divisor+1,f,c
   398  00021C  3211               	rrcf	___awmod@divisor,f,c
   399  00021E  2E13               	decfsz	___awmod@counter,f,c
   400  000220  D7F1               	goto	l822
   401  000222                     l830:
   402  000222  5014               	movf	___awmod@sign,w,c
   403  000224  B4D8               	btfsc	status,2,c
   404  000226  D004               	goto	l834
   405  000228  6C0F               	negf	___awmod@dividend,c
   406  00022A  1E10               	comf	___awmod@dividend+1,f,c
   407  00022C  B0D8               	btfsc	status,0,c
   408  00022E  2A10               	incf	___awmod@dividend+1,f,c
   409  000230                     l834:
   410  000230  C00F  F00F         	movff	___awmod@dividend,?___awmod
   411  000234  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
   412  000238  0012               	return	
   413  00023A                     __end_of___awmod:
   414                           	opt stack 0
   415                           intcon	equ	0xFF2
   416                           wreg	equ	0xFE8
   417                           status	equ	0xFD8
   418                           
   419 ;; *************** function ___awdiv *****************
   420 ;; Defined at:
   421 ;;		line 8 in file "D:\mplab\sources\common\awdiv.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;  dividend        2   14[COMRAM] int 
   424 ;;  divisor         2   16[COMRAM] int 
   425 ;; Auto vars:     Size  Location     Type
   426 ;;  quotient        2   20[COMRAM] int 
   427 ;;  sign            1   19[COMRAM] unsigned char 
   428 ;;  counter         1   18[COMRAM] unsigned char 
   429 ;; Return value:  Size  Location     Type
   430 ;;                  2   14[COMRAM] int 
   431 ;; Registers used:
   432 ;;		wreg, status,2, status,0
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   438 ;;      Params:         4       0       0       0       0       0       0       0       0
   439 ;;      Locals:         4       0       0       0       0       0       0       0       0
   440 ;;      Temps:          0       0       0       0       0       0       0       0       0
   441 ;;      Totals:         8       0       0       0       0       0       0       0       0
   442 ;;Total ram usage:        8 bytes
   443 ;; Hardware stack levels used:    1
   444 ;; Hardware stack levels required when called:    1
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           	psect	text2
   453  000146                     __ptext2:
   454                           	opt stack 0
   455  000146                     ___awdiv:
   456                           	opt stack 29
   457                           
   458                           ;incstack = 0
   459  000146  0E00               	movlw	0
   460  000148  6E14               	movwf	___awdiv@sign,c
   461  00014A  AE12               	btfss	___awdiv@divisor+1,7,c
   462  00014C  D006               	goto	l766
   463  00014E  6C11               	negf	___awdiv@divisor,c
   464  000150  1E12               	comf	___awdiv@divisor+1,f,c
   465  000152  B0D8               	btfsc	status,0,c
   466  000154  2A12               	incf	___awdiv@divisor+1,f,c
   467  000156  0E01               	movlw	1
   468  000158  6E14               	movwf	___awdiv@sign,c
   469  00015A                     l766:
   470  00015A  AE10               	btfss	___awdiv@dividend+1,7,c
   471  00015C  D006               	goto	l772
   472  00015E  6C0F               	negf	___awdiv@dividend,c
   473  000160  1E10               	comf	___awdiv@dividend+1,f,c
   474  000162  B0D8               	btfsc	status,0,c
   475  000164  2A10               	incf	___awdiv@dividend+1,f,c
   476  000166  0E01               	movlw	1
   477  000168  1A14               	xorwf	___awdiv@sign,f,c
   478  00016A                     l772:
   479  00016A  0E00               	movlw	0
   480  00016C  6E16               	movwf	___awdiv@quotient+1,c
   481  00016E  0E00               	movlw	0
   482  000170  6E15               	movwf	___awdiv@quotient,c
   483  000172  5011               	movf	___awdiv@divisor,w,c
   484  000174  1012               	iorwf	___awdiv@divisor+1,w,c
   485  000176  B4D8               	btfsc	status,2,c
   486  000178  D01C               	goto	l794
   487  00017A  0E01               	movlw	1
   488  00017C  6E13               	movwf	___awdiv@counter,c
   489  00017E  D004               	goto	l780
   490  000180                     l778:
   491  000180  90D8               	bcf	status,0,c
   492  000182  3611               	rlcf	___awdiv@divisor,f,c
   493  000184  3612               	rlcf	___awdiv@divisor+1,f,c
   494  000186  2A13               	incf	___awdiv@counter,f,c
   495  000188                     l780:
   496  000188  AE12               	btfss	___awdiv@divisor+1,7,c
   497  00018A  D7FA               	goto	l778
   498  00018C                     l782:
   499  00018C  90D8               	bcf	status,0,c
   500  00018E  3615               	rlcf	___awdiv@quotient,f,c
   501  000190  3616               	rlcf	___awdiv@quotient+1,f,c
   502  000192  5011               	movf	___awdiv@divisor,w,c
   503  000194  5C0F               	subwf	___awdiv@dividend,w,c
   504  000196  5012               	movf	___awdiv@divisor+1,w,c
   505  000198  5810               	subwfb	___awdiv@dividend+1,w,c
   506  00019A  A0D8               	btfss	status,0,c
   507  00019C  D005               	goto	l790
   508  00019E  5011               	movf	___awdiv@divisor,w,c
   509  0001A0  5E0F               	subwf	___awdiv@dividend,f,c
   510  0001A2  5012               	movf	___awdiv@divisor+1,w,c
   511  0001A4  5A10               	subwfb	___awdiv@dividend+1,f,c
   512  0001A6  8015               	bsf	___awdiv@quotient,0,c
   513  0001A8                     l790:
   514  0001A8  90D8               	bcf	status,0,c
   515  0001AA  3212               	rrcf	___awdiv@divisor+1,f,c
   516  0001AC  3211               	rrcf	___awdiv@divisor,f,c
   517  0001AE  2E13               	decfsz	___awdiv@counter,f,c
   518  0001B0  D7ED               	goto	l782
   519  0001B2                     l794:
   520  0001B2  5014               	movf	___awdiv@sign,w,c
   521  0001B4  B4D8               	btfsc	status,2,c
   522  0001B6  D004               	goto	l798
   523  0001B8  6C15               	negf	___awdiv@quotient,c
   524  0001BA  1E16               	comf	___awdiv@quotient+1,f,c
   525  0001BC  B0D8               	btfsc	status,0,c
   526  0001BE  2A16               	incf	___awdiv@quotient+1,f,c
   527  0001C0                     l798:
   528  0001C0  C015  F00F         	movff	___awdiv@quotient,?___awdiv
   529  0001C4  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
   530  0001C8  0012               	return	
   531  0001CA                     __end_of___awdiv:
   532                           	opt stack 0
   533                           intcon	equ	0xFF2
   534                           wreg	equ	0xFE8
   535                           status	equ	0xFD8
   536                           
   537 ;; *************** function _ISR_TIMER_0 *****************
   538 ;; Defined at:
   539 ;;		line 64 in file "temporizador.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, status,2, status,0
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   553 ;;      Params:         0       0       0       0       0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0       0       0       0       0
   555 ;;      Temps:         14       0       0       0       0       0       0       0       0
   556 ;;      Totals:        14       0       0       0       0       0       0       0       0
   557 ;;Total ram usage:       14 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; This function calls:
   560 ;;		Nothing
   561 ;; This function is called by:
   562 ;;		Interrupt level 2
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	intcode
   567  000008                     __pintcode:
   568                           	opt stack 0
   569  000008                     _ISR_TIMER_0:
   570                           	opt stack 29
   571                           
   572                           ;incstack = 0
   573  000008  8219               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   574  00000A  ED59  F000         	call	int_func,f	;refresh shadow registers
   575                           intcon	equ	0xFF2
   576                           wreg	equ	0xFE8
   577                           status	equ	0xFD8
   578                           
   579                           	psect	intcode_body
   580  0000B2                     __pintcode_body:
   581                           	opt stack 29
   582  0000B2                     int_func:
   583                           	opt stack 29
   584  0000B2  0006               	pop		; remove dummy address from shadow register refresh
   585  0000B4  CFFA F001          	movff	pclath,??_ISR_TIMER_0
   586  0000B8  CFFB F002          	movff	pclatu,??_ISR_TIMER_0+1
   587  0000BC  CFE9 F003          	movff	fsr0l,??_ISR_TIMER_0+2
   588  0000C0  CFEA F004          	movff	fsr0h,??_ISR_TIMER_0+3
   589  0000C4  CFE1 F005          	movff	fsr1l,??_ISR_TIMER_0+4
   590  0000C8  CFE2 F006          	movff	fsr1h,??_ISR_TIMER_0+5
   591  0000CC  CFD9 F007          	movff	fsr2l,??_ISR_TIMER_0+6
   592  0000D0  CFDA F008          	movff	fsr2h,??_ISR_TIMER_0+7
   593  0000D4  CFF3 F009          	movff	prodl,??_ISR_TIMER_0+8
   594  0000D8  CFF4 F00A          	movff	prodh,??_ISR_TIMER_0+9
   595  0000DC  CFF6 F00B          	movff	tblptrl,??_ISR_TIMER_0+10
   596  0000E0  CFF7 F00C          	movff	tblptrh,??_ISR_TIMER_0+11
   597  0000E4  CFF8 F00D          	movff	tblptru,??_ISR_TIMER_0+12
   598  0000E8  CFF5 F00E          	movff	tablat,??_ISR_TIMER_0+13
   599                           
   600                           ;temporizador.c: 65: if (INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
   601  0000EC  BAF2               	btfsc	intcon,5,c	;volatile
   602  0000EE  A4F2               	btfss	intcon,2,c	;volatile
   603  0000F0  D00C               	goto	i2l32
   604                           
   605                           ;temporizador.c: 66: if (++count == 100) {
   606  0000F2  2A18               	incf	_count,f,c
   607  0000F4  0E64               	movlw	100
   608  0000F6  1818               	xorwf	_count,w,c
   609  0000F8  A4D8               	btfss	status,2,c
   610  0000FA  D002               	goto	i2l31
   611                           
   612                           ;temporizador.c: 67: count = 0;
   613  0000FC  0E00               	movlw	0
   614  0000FE  6E18               	movwf	_count,c
   615  000100                     i2l31:
   616                           
   617                           ;temporizador.c: 68: }
   618                           ;temporizador.c: 69: TMR0L = 0xDA;
   619  000100  0EDA               	movlw	218
   620  000102  6ED6               	movwf	4054,c	;volatile
   621                           
   622                           ;temporizador.c: 70: TMR0H = 0x0B;
   623  000104  0E0B               	movlw	11
   624  000106  6ED7               	movwf	4055,c	;volatile
   625                           
   626                           ;temporizador.c: 71: INTCONbits.TMR0IF = 0;
   627  000108  94F2               	bcf	intcon,2,c	;volatile
   628  00010A                     i2l32:
   629  00010A  C00E  FFF5         	movff	??_ISR_TIMER_0+13,tablat
   630  00010E  C00D  FFF8         	movff	??_ISR_TIMER_0+12,tblptru
   631  000112  C00C  FFF7         	movff	??_ISR_TIMER_0+11,tblptrh
   632  000116  C00B  FFF6         	movff	??_ISR_TIMER_0+10,tblptrl
   633  00011A  C00A  FFF4         	movff	??_ISR_TIMER_0+9,prodh
   634  00011E  C009  FFF3         	movff	??_ISR_TIMER_0+8,prodl
   635  000122  C008  FFDA         	movff	??_ISR_TIMER_0+7,fsr2h
   636  000126  C007  FFD9         	movff	??_ISR_TIMER_0+6,fsr2l
   637  00012A  C006  FFE2         	movff	??_ISR_TIMER_0+5,fsr1h
   638  00012E  C005  FFE1         	movff	??_ISR_TIMER_0+4,fsr1l
   639  000132  C004  FFEA         	movff	??_ISR_TIMER_0+3,fsr0h
   640  000136  C003  FFE9         	movff	??_ISR_TIMER_0+2,fsr0l
   641  00013A  C002  FFFB         	movff	??_ISR_TIMER_0+1,pclatu
   642  00013E  C001  FFFA         	movff	??_ISR_TIMER_0,pclath
   643  000142  9219               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   644  000144  0011               	retfie		f
   645  000146                     __end_of_ISR_TIMER_0:
   646                           	opt stack 0
   647  0000                     pclatu	equ	0xFFB
   648                           pclath	equ	0xFFA
   649                           tblptru	equ	0xFF8
   650                           tblptrh	equ	0xFF7
   651                           tblptrl	equ	0xFF6
   652                           tablat	equ	0xFF5
   653                           prodh	equ	0xFF4
   654                           prodl	equ	0xFF3
   655                           intcon	equ	0xFF2
   656                           fsr0h	equ	0xFEA
   657                           fsr0l	equ	0xFE9
   658                           wreg	equ	0xFE8
   659                           fsr1h	equ	0xFE2
   660                           fsr1l	equ	0xFE1
   661                           fsr2h	equ	0xFDA
   662                           fsr2l	equ	0xFD9
   663                           status	equ	0xFD8
   664                           pclatu	equ	0xFFB
   665                           pclath	equ	0xFFA
   666                           tblptru	equ	0xFF8
   667                           tblptrh	equ	0xFF7
   668                           tblptrl	equ	0xFF6
   669                           tablat	equ	0xFF5
   670                           prodh	equ	0xFF4
   671                           prodl	equ	0xFF3
   672                           intcon	equ	0xFF2
   673                           fsr0h	equ	0xFEA
   674                           fsr0l	equ	0xFE9
   675                           wreg	equ	0xFE8
   676                           fsr1h	equ	0xFE2
   677                           fsr1l	equ	0xFE1
   678                           fsr2h	equ	0xFDA
   679                           fsr2l	equ	0xFD9
   680                           status	equ	0xFD8
   681                           
   682                           	psect	rparam
   683  0000                     pclatu	equ	0xFFB
   684                           pclath	equ	0xFFA
   685                           tblptru	equ	0xFF8
   686                           tblptrh	equ	0xFF7
   687                           tblptrl	equ	0xFF6
   688                           tablat	equ	0xFF5
   689                           prodh	equ	0xFF4
   690                           prodl	equ	0xFF3
   691                           intcon	equ	0xFF2
   692                           fsr0h	equ	0xFEA
   693                           fsr0l	equ	0xFE9
   694                           wreg	equ	0xFE8
   695                           fsr1h	equ	0xFE2
   696                           fsr1l	equ	0xFE1
   697                           fsr2h	equ	0xFDA
   698                           fsr2l	equ	0xFD9
   699                           status	equ	0xFD8
   700                           
   701                           	psect	temp
   702  000019                     btemp:
   703                           	opt stack 0
   704  000019                     	ds	1
   705  0000                     int$flags	set	btemp
   706                           pclatu	equ	0xFFB
   707                           pclath	equ	0xFFA
   708                           tblptru	equ	0xFF8
   709                           tblptrh	equ	0xFF7
   710                           tblptrl	equ	0xFF6
   711                           tablat	equ	0xFF5
   712                           prodh	equ	0xFF4
   713                           prodl	equ	0xFF3
   714                           intcon	equ	0xFF2
   715                           fsr0h	equ	0xFEA
   716                           fsr0l	equ	0xFE9
   717                           wreg	equ	0xFE8
   718                           fsr1h	equ	0xFE2
   719                           fsr1l	equ	0xFE1
   720                           fsr2h	equ	0xFDA
   721                           fsr2l	equ	0xFD9
   722                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _ISR_TIMER_0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_TIMER_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_TIMER_0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_TIMER_0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_TIMER_0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_TIMER_0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_TIMER_0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_TIMER_0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_TIMER_0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     768
                                             22 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     382
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     386
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR_TIMER_0                                         14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 _ISR_TIMER_0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      18       1       25.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      20        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Dec 01 12:30:13 2020

           ___awdiv@sign 0014              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l810 01DE                      l820 0200                      l822 0204  
                    l830 0222                      l814 01EA                      l834 0230  
                    l826 0218                      l818 01F8                      l780 0188  
                    l772 016A                      l790 01A8                      l782 018C  
                    l766 015A                      l856 003E                      l778 0180  
                    l794 01B2                      l798 01C0             __CFG_CPB$OFF 000000  
                    u307 005C                      u317 0084                      u327 0098  
           __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000             ___awmod@sign 0014  
                    wreg 000FE8             __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _LATD 000F8C                     i2l31 0100  
                   i2l32 010A             __CFG_PWRT$ON 000000                     _main 0012  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0019                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
        __end_of___awdiv 01CA          __end_of___awmod 023A          ___awdiv@divisor 0011  
        ___awdiv@counter 0013                    _TMR0H 000FD7                    _TMR0L 000FD6  
          __CFG_USBDIV$1 000000                    _TRISD 000F95            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _count 0018                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8           __CFG_ICPRT$OFF 000000           __CFG_MCLRE$OFF 000000  
        __initialization 023A             ?_ISR_TIMER_0 0001             __end_of_main 00B2  
                 ??_main 0017            __activetblptr 000000         ___awdiv@dividend 000F  
         __CFG_XINST$OFF 000000                ??___awdiv 0013           __CFG_STVREN$ON 000000  
              ??___awmod 0013         ___awdiv@quotient 0015          ___awmod@divisor 0011  
        ___awmod@counter 0013                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 023C  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
   __size_of_ISR_TIMER_0 013E          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 0146                  ___awmod 01CA  
                __pcinit 023A                  __ramtop 0800                  __ptext0 0012  
                __ptext1 01CA                  __ptext2 0146                _T0CONbits 000FD5  
       ___awmod@dividend 000F           __pintcode_body 00B2     end_of_initialization 023C  
                int_func 00B2                _PORTAbits 000F80                _TRISAbits 000F92  
    start_initialization 023A         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0018  
          ??_ISR_TIMER_0 0001                __pintcode 0008                 ?___awdiv 000F  
               ?___awmod 000F         __CFG_WDTPS$32768 000000      __end_of_ISR_TIMER_0 0146  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awdiv 0084  
       __size_of___awmod 0070            __size_of_main 00A0              _ISR_TIMER_0 0008  
               int$flags 0019    __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2  
               intlevel2 0000  
